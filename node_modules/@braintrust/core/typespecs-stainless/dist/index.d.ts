import { z } from 'zod';

declare const auditSourcesSchema: z.ZodEnum<["app", "api", "external"]>;
declare const fetchLimitSchema: z.ZodNumber;
declare const maxXactIdSchema: z.ZodString;
declare const maxRootSpanIdSchema: z.ZodString;
declare const versionSchema: z.ZodString;
declare const allFetchFiltersSchema: z.ZodArray<z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"path_lookup">;
    path: z.ZodArray<z.ZodString, "many">;
    value: z.ZodAny;
}, "strict", z.ZodTypeAny, {
    path: string[];
    type: "path_lookup";
    value?: any;
}, {
    path: string[];
    type: "path_lookup";
    value?: any;
}>, z.ZodObject<{
    type: z.ZodLiteral<"sql_filter">;
    expr: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "sql_filter";
    expr: string;
}, {
    type: "sql_filter";
    expr: string;
}>]>, "many">;
declare const fetchFiltersSchema: z.ZodArray<z.ZodObject<{
    type: z.ZodLiteral<"path_lookup">;
    path: z.ZodArray<z.ZodString, "many">;
    value: z.ZodAny;
}, "strict", z.ZodTypeAny, {
    path: string[];
    type: "path_lookup";
    value?: any;
}, {
    path: string[];
    type: "path_lookup";
    value?: any;
}>, "many">;
declare const fetchEventsRequestSchema: z.ZodObject<{
    limit: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    max_xact_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    max_root_span_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    filters: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
        type: z.ZodLiteral<"path_lookup">;
        path: z.ZodArray<z.ZodString, "many">;
        value: z.ZodAny;
    }, "strict", z.ZodTypeAny, {
        path: string[];
        type: "path_lookup";
        value?: any;
    }, {
        path: string[];
        type: "path_lookup";
        value?: any;
    }>, "many">>>;
    version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    limit?: number | null | undefined;
    max_xact_id?: string | null | undefined;
    max_root_span_id?: string | null | undefined;
    filters?: {
        path: string[];
        type: "path_lookup";
        value?: any;
    }[] | null | undefined;
    version?: string | null | undefined;
}, {
    limit?: number | null | undefined;
    max_xact_id?: string | null | undefined;
    max_root_span_id?: string | null | undefined;
    filters?: {
        path: string[];
        type: "path_lookup";
        value?: any;
    }[] | null | undefined;
    version?: string | null | undefined;
}>;
declare const insertEventsResponseSchema: z.ZodObject<{
    row_ids: z.ZodArray<z.ZodString, "many">;
}, "strict", z.ZodTypeAny, {
    row_ids: string[];
}, {
    row_ids: string[];
}>;
declare const eventObjectSchemas: {
    readonly experiment: {
        readonly event: z.ZodObject<{
            id: z.ZodString;
            dataset_record_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            _xact_id: z.ZodString;
            created: z.ZodString;
            project_id: z.ZodString;
            experiment_id: z.ZodString;
            input: z.ZodAny;
            output: z.ZodAny;
            expected: z.ZodAny;
            scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            metrics: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">>>>;
            context: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">>>>;
            span_id: z.ZodString;
            span_parents: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            root_span_id: z.ZodString;
            span_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict">>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            project_id: string;
            created: string;
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            experiment_id: string;
            dataset_record_id?: string | null | undefined;
            input?: any;
            output?: any;
            expected?: any;
            scores?: Record<string, number | null | undefined> | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
            metrics?: z.objectOutputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            context?: z.objectOutputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            span_parents?: string[] | null | undefined;
            span_attributes?: z.objectOutputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict"> | null | undefined;
        }, {
            id: string;
            project_id: string;
            created: string;
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            experiment_id: string;
            dataset_record_id?: string | null | undefined;
            input?: any;
            output?: any;
            expected?: any;
            scores?: Record<string, number | null | undefined> | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
            metrics?: z.objectInputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            context?: z.objectInputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            span_parents?: string[] | null | undefined;
            span_attributes?: z.objectInputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict"> | null | undefined;
        }>;
        readonly fetchResponse: z.ZodObject<{
            events: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                dataset_record_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                _xact_id: z.ZodString;
                created: z.ZodString;
                project_id: z.ZodString;
                experiment_id: z.ZodString;
                input: z.ZodAny;
                output: z.ZodAny;
                expected: z.ZodAny;
                scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                metrics: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">>>>;
                context: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">>>>;
                span_id: z.ZodString;
                span_parents: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                root_span_id: z.ZodString;
                span_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict">>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                project_id: string;
                created: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                experiment_id: string;
                dataset_record_id?: string | null | undefined;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }, {
                id: string;
                project_id: string;
                created: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                experiment_id: string;
                dataset_record_id?: string | null | undefined;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: {
                id: string;
                project_id: string;
                created: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                experiment_id: string;
                dataset_record_id?: string | null | undefined;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }[];
        }, {
            events: {
                id: string;
                project_id: string;
                created: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                experiment_id: string;
                dataset_record_id?: string | null | undefined;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }[];
        }>;
        readonly insertEvent: z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>;
        readonly insertRequest: z.ZodObject<{
            events: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
                _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }>, z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
                _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }>]>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }>;
        readonly feedbackItem: z.ZodObject<{
            id: z.ZodString;
            scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
            expected: z.ZodAny;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
        readonly feedbackRequest: z.ZodObject<{
            feedback: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
                expected: z.ZodAny;
                comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }, {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            feedback: {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }, {
            feedback: {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }>;
    };
    readonly dataset: {
        readonly event: z.ZodObject<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            created: z.ZodString;
            project_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_id: z.ZodString;
            input: z.ZodAny;
            expected: z.ZodAny;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            span_id: z.ZodString;
            root_span_id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            id: string;
            created: string;
            dataset_id: string;
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            project_id?: string | null | undefined;
            input?: any;
            expected?: any;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
        }, {
            id: string;
            created: string;
            dataset_id: string;
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            project_id?: string | null | undefined;
            input?: any;
            expected?: any;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
        }>;
        readonly fetchResponse: z.ZodObject<{
            events: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                _xact_id: z.ZodString;
                created: z.ZodString;
                project_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                dataset_id: z.ZodString;
                input: z.ZodAny;
                expected: z.ZodAny;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                span_id: z.ZodString;
                root_span_id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                id: string;
                created: string;
                dataset_id: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                project_id?: string | null | undefined;
                input?: any;
                expected?: any;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
            }, {
                id: string;
                created: string;
                dataset_id: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                project_id?: string | null | undefined;
                input?: any;
                expected?: any;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: {
                id: string;
                created: string;
                dataset_id: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                project_id?: string | null | undefined;
                input?: any;
                expected?: any;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
            }[];
        }, {
            events: {
                id: string;
                created: string;
                dataset_id: string;
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                project_id?: string | null | undefined;
                input?: any;
                expected?: any;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
            }[];
        }>;
        readonly insertEvent: z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>;
        readonly insertRequest: z.ZodObject<{
            events: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
                _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }>, z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
                _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }>]>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }>;
        readonly feedbackItem: z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
        readonly feedbackRequest: z.ZodObject<{
            feedback: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }, {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            feedback: {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }, {
            feedback: {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }>;
    };
    readonly project_logs: {
        readonly event: z.ZodObject<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            created: z.ZodString;
            org_id: z.ZodString;
            project_id: z.ZodString;
            log_id: z.ZodLiteral<"g">;
            input: z.ZodAny;
            output: z.ZodAny;
            expected: z.ZodAny;
            scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            metrics: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">>>>;
            context: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict">>>>;
            span_id: z.ZodString;
            span_parents: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            root_span_id: z.ZodString;
            span_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, "strict", z.ZodAny, z.objectOutputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict">, z.objectInputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict">>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            project_id: string;
            created: string;
            org_id: string;
            log_id: "g";
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            input?: any;
            output?: any;
            expected?: any;
            scores?: Record<string, number | null | undefined> | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
            metrics?: z.objectOutputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            context?: z.objectOutputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            span_parents?: string[] | null | undefined;
            span_attributes?: z.objectOutputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict"> | null | undefined;
        }, {
            id: string;
            project_id: string;
            created: string;
            org_id: string;
            log_id: "g";
            _xact_id: string;
            span_id: string;
            root_span_id: string;
            input?: any;
            output?: any;
            expected?: any;
            scores?: Record<string, number | null | undefined> | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            tags?: string[] | null | undefined;
            metrics?: z.objectInputType<{
                start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            context?: z.objectInputType<{
                caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            }, z.ZodAny, "strict"> | null | undefined;
            span_parents?: string[] | null | undefined;
            span_attributes?: z.objectInputType<{
                name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
            }, z.ZodAny, "strict"> | null | undefined;
        }>;
        readonly fetchResponse: z.ZodObject<{
            events: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                _xact_id: z.ZodString;
                created: z.ZodString;
                org_id: z.ZodString;
                project_id: z.ZodString;
                log_id: z.ZodLiteral<"g">;
                input: z.ZodAny;
                output: z.ZodAny;
                expected: z.ZodAny;
                scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                metrics: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">>>>;
                context: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict">>>>;
                span_id: z.ZodString;
                span_parents: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
                root_span_id: z.ZodString;
                span_attributes: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, "strict", z.ZodAny, z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict">, z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict">>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                project_id: string;
                created: string;
                org_id: string;
                log_id: "g";
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }, {
                id: string;
                project_id: string;
                created: string;
                org_id: string;
                log_id: "g";
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: {
                id: string;
                project_id: string;
                created: string;
                org_id: string;
                log_id: "g";
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectOutputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectOutputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectOutputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }[];
        }, {
            events: {
                id: string;
                project_id: string;
                created: string;
                org_id: string;
                log_id: "g";
                _xact_id: string;
                span_id: string;
                root_span_id: string;
                input?: any;
                output?: any;
                expected?: any;
                scores?: Record<string, number | null | undefined> | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                tags?: string[] | null | undefined;
                metrics?: z.objectInputType<{
                    start: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    end: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    prompt_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    completion_tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                    tokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                context?: z.objectInputType<{
                    caller_functionname: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_filename: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    caller_lineno: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
                }, z.ZodAny, "strict"> | null | undefined;
                span_parents?: string[] | null | undefined;
                span_attributes?: z.objectInputType<{
                    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                    type: z.ZodOptional<z.ZodNullable<z.ZodEnum<["llm", "score", "function", "eval", "task", "tool"]>>>;
                }, z.ZodAny, "strict"> | null | undefined;
            }[];
        }>;
        readonly insertEvent: z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>;
        readonly insertRequest: z.ZodObject<{
            events: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
                _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            }>, z.ZodObject<{
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
                _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
            }, "strict", z.ZodTypeAny, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }, {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            }>]>, "many">;
        }, "strict", z.ZodTypeAny, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }, {
            events: ({
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | null | undefined;
                _parent_id?: string | null | undefined;
            } | {
                [x: string]: any;
                [x: number]: any;
                [x: symbol]: any;
                _is_merge?: boolean | undefined;
                _merge_paths?: string[][] | null | undefined;
            })[];
        }>;
        readonly feedbackItem: z.ZodObject<{
            id: z.ZodString;
            scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
            expected: z.ZodAny;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
        readonly feedbackRequest: z.ZodObject<{
            feedback: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
                expected: z.ZodAny;
                comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }, {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            feedback: {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }, {
            feedback: {
                id: string;
                scores?: Record<string, number | null | undefined> | null | undefined;
                expected?: any;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }>;
    };
    readonly prompt: {
        readonly event: z.ZodObject<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            project_id: z.ZodString;
            log_id: z.ZodLiteral<"p">;
            org_id: z.ZodString;
            name: z.ZodString;
            slug: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            prompt_data: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"completion">;
                    content: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "completion";
                    content: string;
                }, {
                    type: "completion";
                    content: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"chat">;
                    messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"system">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    }, {
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            text: z.ZodDefault<z.ZodString>;
                            type: z.ZodLiteral<"text">;
                        }, "strip", z.ZodTypeAny, {
                            type: "text";
                            text: string;
                        }, {
                            type: "text";
                            text?: string | undefined;
                        }>, z.ZodObject<{
                            image_url: z.ZodObject<{
                                url: z.ZodString;
                                detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                            }, "strip", z.ZodTypeAny, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }>;
                            type: z.ZodLiteral<"image_url">;
                        }, "strip", z.ZodTypeAny, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }>]>, "many">]>;
                        role: z.ZodLiteral<"user">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    }, {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        role: z.ZodLiteral<"assistant">;
                        content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                        function_call: z.ZodOptional<z.ZodObject<{
                            arguments: z.ZodString;
                            name: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            name: string;
                            arguments: string;
                        }, {
                            name: string;
                            arguments: string;
                        }>>;
                        name: z.ZodOptional<z.ZodString>;
                        tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            function: z.ZodObject<{
                                arguments: z.ZodString;
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                                arguments: string;
                            }, {
                                name: string;
                                arguments: string;
                            }>;
                            type: z.ZodLiteral<"function">;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }>, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"tool">;
                        tool_call_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    }, {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        name: z.ZodString;
                        role: z.ZodLiteral<"function">;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        content: string;
                        role: "function";
                    }, {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    }>]>, "many">;
                    tools: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }, {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }>]>>>;
                options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    model: z.ZodOptional<z.ZodString>;
                    params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodOptional<z.ZodNumber>;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        max_tokens: z.ZodOptional<z.ZodNumber>;
                        frequency_penalty: z.ZodOptional<z.ZodNumber>;
                        presence_penalty: z.ZodOptional<z.ZodNumber>;
                        response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                            type: z.ZodLiteral<"json_object">;
                        }, "strict", z.ZodTypeAny, {
                            type: "json_object";
                        }, {
                            type: "json_object";
                        }>>>;
                        tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            type: z.ZodLiteral<"function">;
                            function: z.ZodObject<{
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                            }, {
                                name: string;
                            }>;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }>]>>;
                        function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            name: z.ZodString;
                        }, "strict", z.ZodTypeAny, {
                            name: string;
                        }, {
                            name: string;
                        }>]>>;
                        n: z.ZodOptional<z.ZodNumber>;
                        stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        max_tokens: z.ZodNumber;
                        temperature: z.ZodNumber;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        top_k: z.ZodOptional<z.ZodNumber>;
                        stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodNumber;
                        maxOutputTokens: z.ZodOptional<z.ZodNumber>;
                        topP: z.ZodOptional<z.ZodNumber>;
                        topK: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                    }>]>>;
                    position: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }>>>;
                origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    prompt_id: z.ZodOptional<z.ZodString>;
                    project_id: z.ZodOptional<z.ZodString>;
                    prompt_version: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }>>>;
            }, "strict", z.ZodTypeAny, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            project_id: string;
            org_id: string;
            _xact_id: string;
            log_id: "p";
            slug: string;
            description?: string | null | undefined;
            created?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }, {
            name: string;
            id: string;
            project_id: string;
            org_id: string;
            _xact_id: string;
            log_id: "p";
            slug: string;
            description?: string | null | undefined;
            created?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }>;
        readonly fetchResponse: undefined;
        readonly insertEvent: undefined;
        readonly insertRequest: undefined;
        readonly feedbackItem: z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
        readonly feedbackRequest: z.ZodObject<{
            feedback: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
                source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }, {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            feedback: {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }, {
            feedback: {
                id: string;
                comment?: string | null | undefined;
                metadata?: Record<string, any> | null | undefined;
                source?: "app" | "api" | "external" | null | undefined;
            }[];
        }>;
    };
    readonly prompt_session: {
        readonly event: z.ZodObject<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            created: z.ZodString;
            project_id: z.ZodString;
            prompt_session_id: z.ZodString;
            prompt_session_data: z.ZodAny;
            prompt_data: z.ZodAny;
            object_data: z.ZodAny;
            completion: z.ZodAny;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            project_id: string;
            created: string;
            _xact_id: string;
            prompt_session_id: string;
            prompt_session_data?: any;
            prompt_data?: any;
            object_data?: any;
            completion?: any;
            tags?: string[] | null | undefined;
        }, {
            id: string;
            project_id: string;
            created: string;
            _xact_id: string;
            prompt_session_id: string;
            prompt_session_data?: any;
            prompt_data?: any;
            object_data?: any;
            completion?: any;
            tags?: string[] | null | undefined;
        }>;
        readonly fetchResponse: undefined;
        readonly insertEvent: undefined;
        readonly insertRequest: undefined;
        readonly feedbackItem: z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
        readonly feedbackRequest: z.ZodObject<{
            id: z.ZodString;
            scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodNullable<z.ZodNumber>>>>>;
            expected: z.ZodAny;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            tags?: string[] | null | undefined;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            scores?: Record<string, number | null | undefined> | null | undefined;
            expected?: any;
            tags?: string[] | null | undefined;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>;
    };
};
declare const crossObjectInsertRequestSchema: z.ZodObject<{
    experiment: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        feedback: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>, "many">>>;
        events?: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>, "many">>> | undefined;
    }, "strict", z.ZodTypeAny, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }>>>>;
    dataset: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        feedback: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>, "many">>>;
        events?: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>, "many">>> | undefined;
    }, "strict", z.ZodTypeAny, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }>>>>;
    project_logs: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        feedback: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            source: z.ZodOptional<z.ZodNullable<z.ZodEnum<["app", "api", "external"]>>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }, {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }>, "many">>>;
        events?: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodOptional<z.ZodNullable<z.ZodBoolean>> | z.ZodOptional<z.ZodNullable<z.ZodLiteral<false>>>;
            _parent_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | null | undefined;
            _parent_id?: string | null | undefined;
        }>, z.ZodObject<{
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge: z.ZodBoolean | z.ZodLiteral<true>;
            _merge_paths: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodArray<z.ZodString, "many">, "many">>>;
        }, "strict", z.ZodTypeAny, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }, {
            [x: string]: any;
            [x: number]: any;
            [x: symbol]: any;
            _is_merge?: boolean | undefined;
            _merge_paths?: string[][] | null | undefined;
        }>]>, "many">>> | undefined;
    }, "strict", z.ZodTypeAny, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }>>>>;
}, "strict", z.ZodTypeAny, {
    experiment?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
    dataset?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
    project_logs?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
}, {
    experiment?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
    dataset?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
    project_logs?: Record<string, {
        feedback?: {
            id: string;
            comment?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            source?: "app" | "api" | "external" | null | undefined;
        }[] | null | undefined;
        events?: unknown;
    }> | null | undefined;
}>;
declare const crossObjectInsertResponseSchema: z.ZodObject<{
    experiment: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        row_ids: z.ZodArray<z.ZodString, "many">;
    }, "strict", z.ZodTypeAny, {
        row_ids: string[];
    }, {
        row_ids: string[];
    }>>>>;
    dataset: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        row_ids: z.ZodArray<z.ZodString, "many">;
    }, "strict", z.ZodTypeAny, {
        row_ids: string[];
    }, {
        row_ids: string[];
    }>>>>;
    project_logs: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
        row_ids: z.ZodArray<z.ZodString, "many">;
    }, "strict", z.ZodTypeAny, {
        row_ids: string[];
    }, {
        row_ids: string[];
    }>>>>;
}, "strict", z.ZodTypeAny, {
    experiment?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
    dataset?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
    project_logs?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
}, {
    experiment?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
    dataset?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
    project_logs?: Record<string, {
        row_ids: string[];
    }> | null | undefined;
}>;
declare const summarizeScoresParamSchema: z.ZodBoolean;
declare const comparisonExperimentIdParamSchema: z.ZodString;
declare const summarizeDataParamSchema: z.ZodBoolean;
declare const objectTypeSummarizeResponseSchemas: {
    readonly experiment: z.ZodObject<{
        project_name: z.ZodString;
        experiment_name: z.ZodString;
        project_url: z.ZodString;
        experiment_url: z.ZodString;
        comparison_experiment_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        scores: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
            name: z.ZodString;
            score: z.ZodNumber;
            diff: z.ZodNumber;
            improvements: z.ZodNumber;
            regressions: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            name: string;
            score: number;
            diff: number;
            improvements: number;
            regressions: number;
        }, {
            name: string;
            score: number;
            diff: number;
            improvements: number;
            regressions: number;
        }>>>>;
        metrics: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodObject<{
            name: z.ZodString;
            metric: z.ZodNumber;
            unit: z.ZodString;
            diff: z.ZodNumber;
            improvements: z.ZodNumber;
            regressions: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            name: string;
            diff: number;
            improvements: number;
            regressions: number;
            metric: number;
            unit: string;
        }, {
            name: string;
            diff: number;
            improvements: number;
            regressions: number;
            metric: number;
            unit: string;
        }>>>>;
    }, "strict", z.ZodTypeAny, {
        project_name: string;
        experiment_name: string;
        project_url: string;
        experiment_url: string;
        comparison_experiment_name?: string | null | undefined;
        scores?: Record<string, {
            name: string;
            score: number;
            diff: number;
            improvements: number;
            regressions: number;
        }> | null | undefined;
        metrics?: Record<string, {
            name: string;
            diff: number;
            improvements: number;
            regressions: number;
            metric: number;
            unit: string;
        }> | null | undefined;
    }, {
        project_name: string;
        experiment_name: string;
        project_url: string;
        experiment_url: string;
        comparison_experiment_name?: string | null | undefined;
        scores?: Record<string, {
            name: string;
            score: number;
            diff: number;
            improvements: number;
            regressions: number;
        }> | null | undefined;
        metrics?: Record<string, {
            name: string;
            diff: number;
            improvements: number;
            regressions: number;
            metric: number;
            unit: string;
        }> | null | undefined;
    }>;
    readonly dataset: z.ZodObject<{
        project_name: z.ZodString;
        dataset_name: z.ZodString;
        project_url: z.ZodString;
        dataset_url: z.ZodString;
        data_summary: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            total_records: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            total_records: number;
        }, {
            total_records: number;
        }>>>;
    }, "strict", z.ZodTypeAny, {
        project_name: string;
        project_url: string;
        dataset_name: string;
        dataset_url: string;
        data_summary?: {
            total_records: number;
        } | null | undefined;
    }, {
        project_name: string;
        project_url: string;
        dataset_name: string;
        dataset_url: string;
        data_summary?: {
            total_records: number;
        } | null | undefined;
    }>;
    readonly project: undefined;
    readonly prompt: undefined;
    readonly role: undefined;
    readonly group: undefined;
    readonly acl: undefined;
    readonly user: undefined;
};

declare const userSchema: z.ZodObject<{
    id: z.ZodString;
    given_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    family_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    avatar_url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    given_name?: string | null | undefined;
    family_name?: string | null | undefined;
    email?: string | null | undefined;
    avatar_url?: string | null | undefined;
    created?: string | null | undefined;
}, {
    id: string;
    given_name?: string | null | undefined;
    family_name?: string | null | undefined;
    email?: string | null | undefined;
    avatar_url?: string | null | undefined;
    created?: string | null | undefined;
}>;
type User = z.infer<typeof userSchema>;
declare const organizationSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    api_url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    name?: string | null | undefined;
    api_url?: string | null | undefined;
    created?: string | null | undefined;
}, {
    id: string;
    name?: string | null | undefined;
    api_url?: string | null | undefined;
    created?: string | null | undefined;
}>;
type Organization = z.infer<typeof organizationSchema>;
declare const memberSchema: z.ZodObject<{
    org_id: z.ZodString;
    user_id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    user_id: string;
    org_id: string;
}, {
    user_id: string;
    org_id: string;
}>;
type Member = z.infer<typeof memberSchema>;
declare const meSchema: z.ZodObject<{
    id: z.ZodString;
    organizations: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        name?: string | null | undefined;
    }, {
        id: string;
        name?: string | null | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    id: string;
    organizations: {
        id: string;
        name?: string | null | undefined;
    }[];
}, {
    id: string;
    organizations: {
        id: string;
        name?: string | null | undefined;
    }[];
}>;
type Me = z.infer<typeof meSchema>;
declare const apiKeySchema: z.ZodObject<{
    id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    key_hash: z.ZodString;
    name: z.ZodString;
    preview_name: z.ZodString;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    org_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    key_hash: string;
    preview_name: string;
    created?: string | null | undefined;
    user_id?: string | null | undefined;
    org_id?: string | null | undefined;
}, {
    name: string;
    id: string;
    key_hash: string;
    preview_name: string;
    created?: string | null | undefined;
    user_id?: string | null | undefined;
    org_id?: string | null | undefined;
}>;
type ApiKey = z.infer<typeof apiKeySchema>;
declare const projectSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodString;
    name: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    org_id: string;
    created?: string | null | undefined;
    deleted_at?: string | null | undefined;
    user_id?: string | null | undefined;
}, {
    name: string;
    id: string;
    org_id: string;
    created?: string | null | undefined;
    deleted_at?: string | null | undefined;
    user_id?: string | null | undefined;
}>;
type Project = z.infer<typeof projectSchema>;
declare const datasetSchema: z.ZodObject<{
    id: z.ZodString;
    project_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    project_id?: string | null | undefined;
    description?: string | null | undefined;
    created?: string | null | undefined;
    deleted_at?: string | null | undefined;
    user_id?: string | null | undefined;
}, {
    name: string;
    id: string;
    project_id?: string | null | undefined;
    description?: string | null | undefined;
    created?: string | null | undefined;
    deleted_at?: string | null | undefined;
    user_id?: string | null | undefined;
}>;
type Dataset = z.infer<typeof datasetSchema>;
declare const promptSchema: z.ZodObject<{
    id: z.ZodString;
    _xact_id: z.ZodString;
    project_id: z.ZodString;
    log_id: z.ZodLiteral<"p">;
    org_id: z.ZodString;
    name: z.ZodString;
    slug: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    prompt_data: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"completion">;
            content: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "completion";
            content: string;
        }, {
            type: "completion";
            content: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"chat">;
            messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                content: z.ZodDefault<z.ZodString>;
                role: z.ZodLiteral<"system">;
                name: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                content: string;
                role: "system";
                name?: string | undefined;
            }, {
                role: "system";
                content?: string | undefined;
                name?: string | undefined;
            }>, z.ZodObject<{
                content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                    text: z.ZodDefault<z.ZodString>;
                    type: z.ZodLiteral<"text">;
                }, "strip", z.ZodTypeAny, {
                    type: "text";
                    text: string;
                }, {
                    type: "text";
                    text?: string | undefined;
                }>, z.ZodObject<{
                    image_url: z.ZodObject<{
                        url: z.ZodString;
                        detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                    }, "strip", z.ZodTypeAny, {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    }, {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    }>;
                    type: z.ZodLiteral<"image_url">;
                }, "strip", z.ZodTypeAny, {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                }, {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                }>]>, "many">]>;
                role: z.ZodLiteral<"user">;
                name: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                content: (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[]) & (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined);
                role: "user";
                name?: string | undefined;
            }, {
                role: "user";
                content?: string | ({
                    type: "text";
                    text?: string | undefined;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined;
                name?: string | undefined;
            }>, z.ZodObject<{
                role: z.ZodLiteral<"assistant">;
                content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                function_call: z.ZodOptional<z.ZodObject<{
                    arguments: z.ZodString;
                    name: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    arguments: string;
                }, {
                    name: string;
                    arguments: string;
                }>>;
                name: z.ZodOptional<z.ZodString>;
                tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    function: z.ZodObject<{
                        arguments: z.ZodString;
                        name: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        arguments: string;
                    }, {
                        name: string;
                        arguments: string;
                    }>;
                    type: z.ZodLiteral<"function">;
                }, "strip", z.ZodTypeAny, {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }, {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }>, "many">>;
            }, "strip", z.ZodTypeAny, {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            }, {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            }>, z.ZodObject<{
                content: z.ZodDefault<z.ZodString>;
                role: z.ZodLiteral<"tool">;
                tool_call_id: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                content: string;
                role: "tool";
                tool_call_id: string;
            }, {
                role: "tool";
                tool_call_id: string;
                content?: string | undefined;
            }>, z.ZodObject<{
                content: z.ZodDefault<z.ZodString>;
                name: z.ZodString;
                role: z.ZodLiteral<"function">;
            }, "strip", z.ZodTypeAny, {
                name: string;
                content: string;
                role: "function";
            }, {
                name: string;
                role: "function";
                content?: string | undefined;
            }>]>, "many">;
            tools: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            type: "chat";
            messages: ({
                content: string;
                role: "system";
                name?: string | undefined;
            } | {
                content: (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[]) & (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined);
                role: "user";
                name?: string | undefined;
            } | {
                content: string;
                role: "tool";
                tool_call_id: string;
            } | {
                name: string;
                content: string;
                role: "function";
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        }, {
            type: "chat";
            messages: ({
                role: "system";
                content?: string | undefined;
                name?: string | undefined;
            } | {
                role: "user";
                content?: string | ({
                    type: "text";
                    text?: string | undefined;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined;
                name?: string | undefined;
            } | {
                role: "tool";
                tool_call_id: string;
                content?: string | undefined;
            } | {
                name: string;
                role: "function";
                content?: string | undefined;
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        }>]>>>;
        options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            model: z.ZodOptional<z.ZodString>;
            params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                use_cache: z.ZodOptional<z.ZodBoolean>;
                temperature: z.ZodOptional<z.ZodNumber>;
                top_p: z.ZodOptional<z.ZodNumber>;
                max_tokens: z.ZodOptional<z.ZodNumber>;
                frequency_penalty: z.ZodOptional<z.ZodNumber>;
                presence_penalty: z.ZodOptional<z.ZodNumber>;
                response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    type: z.ZodLiteral<"json_object">;
                }, "strict", z.ZodTypeAny, {
                    type: "json_object";
                }, {
                    type: "json_object";
                }>>>;
                tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                    type: z.ZodLiteral<"function">;
                    function: z.ZodObject<{
                        name: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                    }, {
                        name: string;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    function: {
                        name: string;
                    };
                    type: "function";
                }, {
                    function: {
                        name: string;
                    };
                    type: "function";
                }>]>>;
                function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                    name: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    name: string;
                }, {
                    name: string;
                }>]>>;
                n: z.ZodOptional<z.ZodNumber>;
                stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            }, {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            }>, z.ZodObject<{
                use_cache: z.ZodOptional<z.ZodBoolean>;
                max_tokens: z.ZodNumber;
                temperature: z.ZodNumber;
                top_p: z.ZodOptional<z.ZodNumber>;
                top_k: z.ZodOptional<z.ZodNumber>;
                stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            }, {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            }>, z.ZodObject<{
                use_cache: z.ZodOptional<z.ZodBoolean>;
                temperature: z.ZodNumber;
                maxOutputTokens: z.ZodOptional<z.ZodNumber>;
                topP: z.ZodOptional<z.ZodNumber>;
                topK: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            }, {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            }>, z.ZodObject<{
                use_cache: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                use_cache?: boolean | undefined;
            }, {
                use_cache?: boolean | undefined;
            }>]>>;
            position: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        }, {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        }>>>;
        origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            prompt_id: z.ZodOptional<z.ZodString>;
            project_id: z.ZodOptional<z.ZodString>;
            prompt_version: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        }, {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        }>>>;
    }, "strict", z.ZodTypeAny, {
        prompt?: {
            type: "completion";
            content: string;
        } | {
            type: "chat";
            messages: ({
                content: string;
                role: "system";
                name?: string | undefined;
            } | {
                content: (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[]) & (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined);
                role: "user";
                name?: string | undefined;
            } | {
                content: string;
                role: "tool";
                tool_call_id: string;
            } | {
                name: string;
                content: string;
                role: "function";
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        } | null | undefined;
        options?: {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        } | null | undefined;
        origin?: {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        } | null | undefined;
    }, {
        prompt?: {
            type: "completion";
            content: string;
        } | {
            type: "chat";
            messages: ({
                role: "system";
                content?: string | undefined;
                name?: string | undefined;
            } | {
                role: "user";
                content?: string | ({
                    type: "text";
                    text?: string | undefined;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined;
                name?: string | undefined;
            } | {
                role: "tool";
                tool_call_id: string;
                content?: string | undefined;
            } | {
                name: string;
                role: "function";
                content?: string | undefined;
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        } | null | undefined;
        options?: {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        } | null | undefined;
        origin?: {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        } | null | undefined;
    }>>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    project_id: string;
    org_id: string;
    _xact_id: string;
    log_id: "p";
    slug: string;
    description?: string | null | undefined;
    created?: string | null | undefined;
    prompt_data?: {
        prompt?: {
            type: "completion";
            content: string;
        } | {
            type: "chat";
            messages: ({
                content: string;
                role: "system";
                name?: string | undefined;
            } | {
                content: (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[]) & (string | ({
                    type: "text";
                    text: string;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined);
                role: "user";
                name?: string | undefined;
            } | {
                content: string;
                role: "tool";
                tool_call_id: string;
            } | {
                name: string;
                content: string;
                role: "function";
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        } | null | undefined;
        options?: {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        } | null | undefined;
        origin?: {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        } | null | undefined;
    } | null | undefined;
    tags?: string[] | null | undefined;
    metadata?: Record<string, any> | null | undefined;
}, {
    name: string;
    id: string;
    project_id: string;
    org_id: string;
    _xact_id: string;
    log_id: "p";
    slug: string;
    description?: string | null | undefined;
    created?: string | null | undefined;
    prompt_data?: {
        prompt?: {
            type: "completion";
            content: string;
        } | {
            type: "chat";
            messages: ({
                role: "system";
                content?: string | undefined;
                name?: string | undefined;
            } | {
                role: "user";
                content?: string | ({
                    type: "text";
                    text?: string | undefined;
                } | {
                    type: "image_url";
                    image_url: {
                        url: string;
                        detail?: "auto" | "low" | "high" | undefined;
                    };
                })[] | undefined;
                name?: string | undefined;
            } | {
                role: "tool";
                tool_call_id: string;
                content?: string | undefined;
            } | {
                name: string;
                role: "function";
                content?: string | undefined;
            } | {
                role: "assistant";
                content?: string | null | undefined;
                function_call?: {
                    name: string;
                    arguments: string;
                } | undefined;
                name?: string | undefined;
                tool_calls?: {
                    function: {
                        name: string;
                        arguments: string;
                    };
                    type: "function";
                    id: string;
                }[] | undefined;
            })[];
            tools?: string | undefined;
        } | null | undefined;
        options?: {
            model?: string | undefined;
            params?: {
                use_cache?: boolean | undefined;
                temperature?: number | undefined;
                top_p?: number | undefined;
                max_tokens?: number | undefined;
                frequency_penalty?: number | undefined;
                presence_penalty?: number | undefined;
                response_format?: {
                    type: "json_object";
                } | null | undefined;
                tool_choice?: "auto" | "none" | {
                    function: {
                        name: string;
                    };
                    type: "function";
                } | undefined;
                function_call?: "auto" | "none" | {
                    name: string;
                } | undefined;
                n?: number | undefined;
                stop?: string[] | undefined;
            } | {
                temperature: number;
                max_tokens: number;
                use_cache?: boolean | undefined;
                top_p?: number | undefined;
                top_k?: number | undefined;
                stop_sequences?: string[] | undefined;
                max_tokens_to_sample?: number | undefined;
            } | {
                temperature: number;
                use_cache?: boolean | undefined;
                maxOutputTokens?: number | undefined;
                topP?: number | undefined;
                topK?: number | undefined;
            } | {
                use_cache?: boolean | undefined;
            } | undefined;
            position?: string | undefined;
        } | null | undefined;
        origin?: {
            prompt_id?: string | undefined;
            project_id?: string | undefined;
            prompt_version?: string | undefined;
        } | null | undefined;
    } | null | undefined;
    tags?: string[] | null | undefined;
    metadata?: Record<string, any> | null | undefined;
}>;
type Prompt = z.infer<typeof promptSchema>;
declare const experimentSchema: z.ZodObject<{
    id: z.ZodString;
    project_id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    repo_info: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        branch: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        tag: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        dirty: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        author_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        author_email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        commit_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        commit_time: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        git_diff: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strict", z.ZodTypeAny, {
        commit?: string | null | undefined;
        branch?: string | null | undefined;
        tag?: string | null | undefined;
        dirty?: boolean | null | undefined;
        author_name?: string | null | undefined;
        author_email?: string | null | undefined;
        commit_message?: string | null | undefined;
        commit_time?: string | null | undefined;
        git_diff?: string | null | undefined;
    }, {
        commit?: string | null | undefined;
        branch?: string | null | undefined;
        tag?: string | null | undefined;
        dirty?: boolean | null | undefined;
        author_name?: string | null | undefined;
        author_email?: string | null | undefined;
        commit_message?: string | null | undefined;
        commit_time?: string | null | undefined;
        git_diff?: string | null | undefined;
    }>>>;
    commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    base_exp_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dataset_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    dataset_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    public: z.ZodBoolean;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    project_id: string;
    public: boolean;
    description?: string | null | undefined;
    created?: string | null | undefined;
    repo_info?: {
        commit?: string | null | undefined;
        branch?: string | null | undefined;
        tag?: string | null | undefined;
        dirty?: boolean | null | undefined;
        author_name?: string | null | undefined;
        author_email?: string | null | undefined;
        commit_message?: string | null | undefined;
        commit_time?: string | null | undefined;
        git_diff?: string | null | undefined;
    } | null | undefined;
    commit?: string | null | undefined;
    base_exp_id?: string | null | undefined;
    deleted_at?: string | null | undefined;
    dataset_id?: string | null | undefined;
    dataset_version?: string | null | undefined;
    user_id?: string | null | undefined;
    metadata?: Record<string, any> | null | undefined;
}, {
    name: string;
    id: string;
    project_id: string;
    public: boolean;
    description?: string | null | undefined;
    created?: string | null | undefined;
    repo_info?: {
        commit?: string | null | undefined;
        branch?: string | null | undefined;
        tag?: string | null | undefined;
        dirty?: boolean | null | undefined;
        author_name?: string | null | undefined;
        author_email?: string | null | undefined;
        commit_message?: string | null | undefined;
        commit_time?: string | null | undefined;
        git_diff?: string | null | undefined;
    } | null | undefined;
    commit?: string | null | undefined;
    base_exp_id?: string | null | undefined;
    deleted_at?: string | null | undefined;
    dataset_id?: string | null | undefined;
    dataset_version?: string | null | undefined;
    user_id?: string | null | undefined;
    metadata?: Record<string, any> | null | undefined;
}>;
type Experiment = z.infer<typeof experimentSchema>;
declare const permissionEnum: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
type Permission = z.infer<typeof permissionEnum>;
declare const roleSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    member_permissions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>, "many">>>;
    member_roles: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    org_id?: string | null | undefined;
    user_id?: string | null | undefined;
    created?: string | null | undefined;
    description?: string | null | undefined;
    deleted_at?: string | null | undefined;
    member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
    member_roles?: string[] | null | undefined;
}, {
    name: string;
    id: string;
    org_id?: string | null | undefined;
    user_id?: string | null | undefined;
    created?: string | null | undefined;
    description?: string | null | undefined;
    deleted_at?: string | null | undefined;
    member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
    member_roles?: string[] | null | undefined;
}>;
type Role = z.infer<typeof roleSchema>;
declare const groupSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodString;
    user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    member_users: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
    member_groups: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    org_id: string;
    user_id?: string | null | undefined;
    created?: string | null | undefined;
    description?: string | null | undefined;
    deleted_at?: string | null | undefined;
    member_users?: string[] | null | undefined;
    member_groups?: string[] | null | undefined;
}, {
    name: string;
    id: string;
    org_id: string;
    user_id?: string | null | undefined;
    created?: string | null | undefined;
    description?: string | null | undefined;
    deleted_at?: string | null | undefined;
    member_users?: string[] | null | undefined;
    member_groups?: string[] | null | undefined;
}>;
type Group = z.infer<typeof groupSchema>;
declare const aclObjectTypeEnum: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
type AclObjectType = z.infer<typeof aclObjectTypeEnum>;
declare const aclObjectSchema: z.ZodObject<{
    id: z.ZodString;
    object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
    object_id: z.ZodString;
    restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
    _object_org_id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
    created?: string | null | undefined;
}, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
    created?: string | null | undefined;
}>;
declare const aclSchema: z.ZodUnion<[z.ZodObject<{
    id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    user_id: z.ZodString;
    object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
    object_id: z.ZodString;
    restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
    _object_org_id: z.ZodString;
    permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
}, "strict", z.ZodTypeAny, {
    id: string;
    user_id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}, {
    id: string;
    user_id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}>, z.ZodObject<{
    id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    user_id: z.ZodString;
    object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
    object_id: z.ZodString;
    restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
    _object_org_id: z.ZodString;
    role_id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    id: string;
    user_id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    role_id: string;
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}, {
    id: string;
    user_id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    role_id: string;
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}>, z.ZodObject<{
    id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
    object_id: z.ZodString;
    restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
    _object_org_id: z.ZodString;
    group_id: z.ZodString;
    permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
}, "strict", z.ZodTypeAny, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    group_id: string;
    permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    group_id: string;
    permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}>, z.ZodObject<{
    id: z.ZodString;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
    object_id: z.ZodString;
    restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
    _object_org_id: z.ZodString;
    group_id: z.ZodString;
    role_id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    group_id: string;
    role_id: string;
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}, {
    id: string;
    object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
    object_id: string;
    _object_org_id: string;
    group_id: string;
    role_id: string;
    created?: string | null | undefined;
    restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
}>]>;
type Acl = z.infer<typeof aclSchema>;
declare const appLimitSchema: z.ZodNumber;
declare const startingAfterSchema: z.ZodString;
declare const endingBeforeSchema: z.ZodString;
declare function makeObjectIdsFilterSchema(objectName: string): z.ZodString;
declare const objectSchemas: {
    experiment: {
        create: z.ZodObject<{
            project_id: z.ZodString;
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            repo_info: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                branch: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                tag: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                dirty: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                author_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                author_email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_time: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                git_diff: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }>>>;
            base_exp_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            public: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            ensure_new: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "strict", z.ZodTypeAny, {
            project_id: string;
            name?: string | null | undefined;
            description?: string | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            base_exp_id?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            public?: boolean | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            ensure_new?: boolean | null | undefined;
        }, {
            project_id: string;
            name?: string | null | undefined;
            description?: string | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            base_exp_id?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            public?: boolean | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            ensure_new?: boolean | null | undefined;
        }>;
        patch: z.ZodObject<Omit<{
            project_id: z.ZodString;
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            repo_info: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                branch: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                tag: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                dirty: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                author_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                author_email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_time: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                git_diff: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }>>>;
            base_exp_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            public: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
            ensure_new: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
        }, "project_id" | "ensure_new">, "strict", z.ZodTypeAny, {
            description?: string | null | undefined;
            name?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            base_exp_id?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            public?: boolean | null | undefined;
        }, {
            description?: string | null | undefined;
            name?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            base_exp_id?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            public?: boolean | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            project_id: z.ZodString;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            repo_info: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                branch: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                tag: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                dirty: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
                author_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                author_email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_message: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                commit_time: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                git_diff: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            }, "strict", z.ZodTypeAny, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }, {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            }>>>;
            commit: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            base_exp_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            dataset_version: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            public: z.ZodBoolean;
            user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            project_id: string;
            public: boolean;
            description?: string | null | undefined;
            created?: string | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            commit?: string | null | undefined;
            base_exp_id?: string | null | undefined;
            deleted_at?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            user_id?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }, {
            name: string;
            id: string;
            project_id: string;
            public: boolean;
            description?: string | null | undefined;
            created?: string | null | undefined;
            repo_info?: {
                commit?: string | null | undefined;
                branch?: string | null | undefined;
                tag?: string | null | undefined;
                dirty?: boolean | null | undefined;
                author_name?: string | null | undefined;
                author_email?: string | null | undefined;
                commit_message?: string | null | undefined;
                commit_time?: string | null | undefined;
                git_diff?: string | null | undefined;
            } | null | undefined;
            commit?: string | null | undefined;
            base_exp_id?: string | null | undefined;
            deleted_at?: string | null | undefined;
            dataset_id?: string | null | undefined;
            dataset_version?: string | null | undefined;
            user_id?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }>;
    };
    dataset: {
        create: z.ZodObject<{
            project_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            project_id?: string | null | undefined;
            description?: string | null | undefined;
        }, {
            name: string;
            project_id?: string | null | undefined;
            description?: string | null | undefined;
        }>;
        patch: z.ZodObject<{
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name?: string | null | undefined;
            description?: string | null | undefined;
        }, {
            name?: string | null | undefined;
            description?: string | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            project_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            project_id?: string | null | undefined;
            description?: string | null | undefined;
            created?: string | null | undefined;
            deleted_at?: string | null | undefined;
            user_id?: string | null | undefined;
        }, {
            name: string;
            id: string;
            project_id?: string | null | undefined;
            description?: string | null | undefined;
            created?: string | null | undefined;
            deleted_at?: string | null | undefined;
            user_id?: string | null | undefined;
        }>;
    };
    project: {
        create: z.ZodObject<{
            name: z.ZodString;
            org_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            org_name?: string | null | undefined;
        }, {
            name: string;
            org_name?: string | null | undefined;
        }>;
        patch: z.ZodObject<{
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name?: string | null | undefined;
        }, {
            name?: string | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            org_id: z.ZodString;
            name: z.ZodString;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            org_id: string;
            created?: string | null | undefined;
            deleted_at?: string | null | undefined;
            user_id?: string | null | undefined;
        }, {
            name: string;
            id: string;
            org_id: string;
            created?: string | null | undefined;
            deleted_at?: string | null | undefined;
            user_id?: string | null | undefined;
        }>;
    };
    prompt: {
        create: z.ZodObject<Omit<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            project_id: z.ZodString;
            log_id: z.ZodLiteral<"p">;
            org_id: z.ZodString;
            name: z.ZodString;
            slug: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            prompt_data: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"completion">;
                    content: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "completion";
                    content: string;
                }, {
                    type: "completion";
                    content: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"chat">;
                    messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"system">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    }, {
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            text: z.ZodDefault<z.ZodString>;
                            type: z.ZodLiteral<"text">;
                        }, "strip", z.ZodTypeAny, {
                            type: "text";
                            text: string;
                        }, {
                            type: "text";
                            text?: string | undefined;
                        }>, z.ZodObject<{
                            image_url: z.ZodObject<{
                                url: z.ZodString;
                                detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                            }, "strip", z.ZodTypeAny, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }>;
                            type: z.ZodLiteral<"image_url">;
                        }, "strip", z.ZodTypeAny, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }>]>, "many">]>;
                        role: z.ZodLiteral<"user">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    }, {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        role: z.ZodLiteral<"assistant">;
                        content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                        function_call: z.ZodOptional<z.ZodObject<{
                            arguments: z.ZodString;
                            name: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            name: string;
                            arguments: string;
                        }, {
                            name: string;
                            arguments: string;
                        }>>;
                        name: z.ZodOptional<z.ZodString>;
                        tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            function: z.ZodObject<{
                                arguments: z.ZodString;
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                                arguments: string;
                            }, {
                                name: string;
                                arguments: string;
                            }>;
                            type: z.ZodLiteral<"function">;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }>, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"tool">;
                        tool_call_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    }, {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        name: z.ZodString;
                        role: z.ZodLiteral<"function">;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        content: string;
                        role: "function";
                    }, {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    }>]>, "many">;
                    tools: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }, {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }>]>>>;
                options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    model: z.ZodOptional<z.ZodString>;
                    params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodOptional<z.ZodNumber>;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        max_tokens: z.ZodOptional<z.ZodNumber>;
                        frequency_penalty: z.ZodOptional<z.ZodNumber>;
                        presence_penalty: z.ZodOptional<z.ZodNumber>;
                        response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                            type: z.ZodLiteral<"json_object">;
                        }, "strict", z.ZodTypeAny, {
                            type: "json_object";
                        }, {
                            type: "json_object";
                        }>>>;
                        tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            type: z.ZodLiteral<"function">;
                            function: z.ZodObject<{
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                            }, {
                                name: string;
                            }>;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }>]>>;
                        function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            name: z.ZodString;
                        }, "strict", z.ZodTypeAny, {
                            name: string;
                        }, {
                            name: string;
                        }>]>>;
                        n: z.ZodOptional<z.ZodNumber>;
                        stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        max_tokens: z.ZodNumber;
                        temperature: z.ZodNumber;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        top_k: z.ZodOptional<z.ZodNumber>;
                        stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodNumber;
                        maxOutputTokens: z.ZodOptional<z.ZodNumber>;
                        topP: z.ZodOptional<z.ZodNumber>;
                        topK: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                    }>]>>;
                    position: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }>>>;
                origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    prompt_id: z.ZodOptional<z.ZodString>;
                    project_id: z.ZodOptional<z.ZodString>;
                    prompt_version: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }>>>;
            }, "strict", z.ZodTypeAny, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "id" | "created" | "metadata" | "org_id" | "_xact_id" | "log_id">, "strict", z.ZodTypeAny, {
            name: string;
            project_id: string;
            slug: string;
            description?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
        }, {
            name: string;
            project_id: string;
            slug: string;
            description?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
        }>;
        patch: z.ZodObject<{
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodNullable<z.ZodString>>>>;
            prompt_data: z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodNullable<z.ZodObject<{
                prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"completion">;
                    content: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "completion";
                    content: string;
                }, {
                    type: "completion";
                    content: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"chat">;
                    messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"system">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    }, {
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            text: z.ZodDefault<z.ZodString>;
                            type: z.ZodLiteral<"text">;
                        }, "strip", z.ZodTypeAny, {
                            type: "text";
                            text: string;
                        }, {
                            type: "text";
                            text?: string | undefined;
                        }>, z.ZodObject<{
                            image_url: z.ZodObject<{
                                url: z.ZodString;
                                detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                            }, "strip", z.ZodTypeAny, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }>;
                            type: z.ZodLiteral<"image_url">;
                        }, "strip", z.ZodTypeAny, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }>]>, "many">]>;
                        role: z.ZodLiteral<"user">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    }, {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        role: z.ZodLiteral<"assistant">;
                        content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                        function_call: z.ZodOptional<z.ZodObject<{
                            arguments: z.ZodString;
                            name: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            name: string;
                            arguments: string;
                        }, {
                            name: string;
                            arguments: string;
                        }>>;
                        name: z.ZodOptional<z.ZodString>;
                        tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            function: z.ZodObject<{
                                arguments: z.ZodString;
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                                arguments: string;
                            }, {
                                name: string;
                                arguments: string;
                            }>;
                            type: z.ZodLiteral<"function">;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }>, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"tool">;
                        tool_call_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    }, {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        name: z.ZodString;
                        role: z.ZodLiteral<"function">;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        content: string;
                        role: "function";
                    }, {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    }>]>, "many">;
                    tools: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }, {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }>]>>>;
                options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    model: z.ZodOptional<z.ZodString>;
                    params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodOptional<z.ZodNumber>;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        max_tokens: z.ZodOptional<z.ZodNumber>;
                        frequency_penalty: z.ZodOptional<z.ZodNumber>;
                        presence_penalty: z.ZodOptional<z.ZodNumber>;
                        response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                            type: z.ZodLiteral<"json_object">;
                        }, "strict", z.ZodTypeAny, {
                            type: "json_object";
                        }, {
                            type: "json_object";
                        }>>>;
                        tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            type: z.ZodLiteral<"function">;
                            function: z.ZodObject<{
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                            }, {
                                name: string;
                            }>;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }>]>>;
                        function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            name: z.ZodString;
                        }, "strict", z.ZodTypeAny, {
                            name: string;
                        }, {
                            name: string;
                        }>]>>;
                        n: z.ZodOptional<z.ZodNumber>;
                        stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        max_tokens: z.ZodNumber;
                        temperature: z.ZodNumber;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        top_k: z.ZodOptional<z.ZodNumber>;
                        stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodNumber;
                        maxOutputTokens: z.ZodOptional<z.ZodNumber>;
                        topP: z.ZodOptional<z.ZodNumber>;
                        topK: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                    }>]>>;
                    position: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }>>>;
                origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    prompt_id: z.ZodOptional<z.ZodString>;
                    project_id: z.ZodOptional<z.ZodString>;
                    prompt_version: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }>>>;
            }, "strict", z.ZodTypeAny, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }>>>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>>>;
        }, "strict", z.ZodTypeAny, {
            name?: string | null | undefined;
            description?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
        }, {
            name?: string | null | undefined;
            description?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            _xact_id: z.ZodString;
            project_id: z.ZodString;
            log_id: z.ZodLiteral<"p">;
            org_id: z.ZodString;
            name: z.ZodString;
            slug: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            prompt_data: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
                    type: z.ZodLiteral<"completion">;
                    content: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "completion";
                    content: string;
                }, {
                    type: "completion";
                    content: string;
                }>, z.ZodObject<{
                    type: z.ZodLiteral<"chat">;
                    messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"system">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    }, {
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            text: z.ZodDefault<z.ZodString>;
                            type: z.ZodLiteral<"text">;
                        }, "strip", z.ZodTypeAny, {
                            type: "text";
                            text: string;
                        }, {
                            type: "text";
                            text?: string | undefined;
                        }>, z.ZodObject<{
                            image_url: z.ZodObject<{
                                url: z.ZodString;
                                detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                            }, "strip", z.ZodTypeAny, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }, {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            }>;
                            type: z.ZodLiteral<"image_url">;
                        }, "strip", z.ZodTypeAny, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }, {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        }>]>, "many">]>;
                        role: z.ZodLiteral<"user">;
                        name: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    }, {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    }>, z.ZodObject<{
                        role: z.ZodLiteral<"assistant">;
                        content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
                        function_call: z.ZodOptional<z.ZodObject<{
                            arguments: z.ZodString;
                            name: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            name: string;
                            arguments: string;
                        }, {
                            name: string;
                            arguments: string;
                        }>>;
                        name: z.ZodOptional<z.ZodString>;
                        tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            function: z.ZodObject<{
                                arguments: z.ZodString;
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                                arguments: string;
                            }, {
                                name: string;
                                arguments: string;
                            }>;
                            type: z.ZodLiteral<"function">;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }, {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }>, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }, {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        role: z.ZodLiteral<"tool">;
                        tool_call_id: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    }, {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    }>, z.ZodObject<{
                        content: z.ZodDefault<z.ZodString>;
                        name: z.ZodString;
                        role: z.ZodLiteral<"function">;
                    }, "strip", z.ZodTypeAny, {
                        name: string;
                        content: string;
                        role: "function";
                    }, {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    }>]>, "many">;
                    tools: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }, {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                }>]>>>;
                options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    model: z.ZodOptional<z.ZodString>;
                    params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodOptional<z.ZodNumber>;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        max_tokens: z.ZodOptional<z.ZodNumber>;
                        frequency_penalty: z.ZodOptional<z.ZodNumber>;
                        presence_penalty: z.ZodOptional<z.ZodNumber>;
                        response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                            type: z.ZodLiteral<"json_object">;
                        }, "strict", z.ZodTypeAny, {
                            type: "json_object";
                        }, {
                            type: "json_object";
                        }>>>;
                        tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            type: z.ZodLiteral<"function">;
                            function: z.ZodObject<{
                                name: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                name: string;
                            }, {
                                name: string;
                            }>;
                        }, "strip", z.ZodTypeAny, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }, {
                            function: {
                                name: string;
                            };
                            type: "function";
                        }>]>>;
                        function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                            name: z.ZodString;
                        }, "strict", z.ZodTypeAny, {
                            name: string;
                        }, {
                            name: string;
                        }>]>>;
                        n: z.ZodOptional<z.ZodNumber>;
                        stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        max_tokens: z.ZodNumber;
                        temperature: z.ZodNumber;
                        top_p: z.ZodOptional<z.ZodNumber>;
                        top_k: z.ZodOptional<z.ZodNumber>;
                        stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }, {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                        temperature: z.ZodNumber;
                        maxOutputTokens: z.ZodOptional<z.ZodNumber>;
                        topP: z.ZodOptional<z.ZodNumber>;
                        topK: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }, {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    }>, z.ZodObject<{
                        use_cache: z.ZodOptional<z.ZodBoolean>;
                    }, "strip", z.ZodTypeAny, {
                        use_cache?: boolean | undefined;
                    }, {
                        use_cache?: boolean | undefined;
                    }>]>>;
                    position: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }, {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                }>>>;
                origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                    prompt_id: z.ZodOptional<z.ZodString>;
                    project_id: z.ZodOptional<z.ZodString>;
                    prompt_version: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }, {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                }>>>;
            }, "strict", z.ZodTypeAny, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }, {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            }>>>;
            tags: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            metadata: z.ZodOptional<z.ZodNullable<z.ZodRecord<z.ZodString, z.ZodAny>>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            project_id: string;
            org_id: string;
            _xact_id: string;
            log_id: "p";
            slug: string;
            description?: string | null | undefined;
            created?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        content: string;
                        role: "system";
                        name?: string | undefined;
                    } | {
                        content: (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[]) & (string | ({
                            type: "text";
                            text: string;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined);
                        role: "user";
                        name?: string | undefined;
                    } | {
                        content: string;
                        role: "tool";
                        tool_call_id: string;
                    } | {
                        name: string;
                        content: string;
                        role: "function";
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }, {
            name: string;
            id: string;
            project_id: string;
            org_id: string;
            _xact_id: string;
            log_id: "p";
            slug: string;
            description?: string | null | undefined;
            created?: string | null | undefined;
            prompt_data?: {
                prompt?: {
                    type: "completion";
                    content: string;
                } | {
                    type: "chat";
                    messages: ({
                        role: "system";
                        content?: string | undefined;
                        name?: string | undefined;
                    } | {
                        role: "user";
                        content?: string | ({
                            type: "text";
                            text?: string | undefined;
                        } | {
                            type: "image_url";
                            image_url: {
                                url: string;
                                detail?: "auto" | "low" | "high" | undefined;
                            };
                        })[] | undefined;
                        name?: string | undefined;
                    } | {
                        role: "tool";
                        tool_call_id: string;
                        content?: string | undefined;
                    } | {
                        name: string;
                        role: "function";
                        content?: string | undefined;
                    } | {
                        role: "assistant";
                        content?: string | null | undefined;
                        function_call?: {
                            name: string;
                            arguments: string;
                        } | undefined;
                        name?: string | undefined;
                        tool_calls?: {
                            function: {
                                name: string;
                                arguments: string;
                            };
                            type: "function";
                            id: string;
                        }[] | undefined;
                    })[];
                    tools?: string | undefined;
                } | null | undefined;
                options?: {
                    model?: string | undefined;
                    params?: {
                        use_cache?: boolean | undefined;
                        temperature?: number | undefined;
                        top_p?: number | undefined;
                        max_tokens?: number | undefined;
                        frequency_penalty?: number | undefined;
                        presence_penalty?: number | undefined;
                        response_format?: {
                            type: "json_object";
                        } | null | undefined;
                        tool_choice?: "auto" | "none" | {
                            function: {
                                name: string;
                            };
                            type: "function";
                        } | undefined;
                        function_call?: "auto" | "none" | {
                            name: string;
                        } | undefined;
                        n?: number | undefined;
                        stop?: string[] | undefined;
                    } | {
                        temperature: number;
                        max_tokens: number;
                        use_cache?: boolean | undefined;
                        top_p?: number | undefined;
                        top_k?: number | undefined;
                        stop_sequences?: string[] | undefined;
                        max_tokens_to_sample?: number | undefined;
                    } | {
                        temperature: number;
                        use_cache?: boolean | undefined;
                        maxOutputTokens?: number | undefined;
                        topP?: number | undefined;
                        topK?: number | undefined;
                    } | {
                        use_cache?: boolean | undefined;
                    } | undefined;
                    position?: string | undefined;
                } | null | undefined;
                origin?: {
                    prompt_id?: string | undefined;
                    project_id?: string | undefined;
                    prompt_version?: string | undefined;
                } | null | undefined;
            } | null | undefined;
            tags?: string[] | null | undefined;
            metadata?: Record<string, any> | null | undefined;
        }>;
    };
    role: {
        create: z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_permissions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>, "many">>>;
            member_roles: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            org_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            description?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
            org_name?: string | null | undefined;
        }, {
            name: string;
            description?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
            org_name?: string | null | undefined;
        }>;
        patch: z.ZodObject<{
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_permissions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>, "many">>>;
            member_roles: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            description?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
            name?: string | null | undefined;
        }, {
            description?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
            name?: string | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            org_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_permissions: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>, "many">>>;
            member_roles: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            org_id?: string | null | undefined;
            user_id?: string | null | undefined;
            created?: string | null | undefined;
            description?: string | null | undefined;
            deleted_at?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
        }, {
            name: string;
            id: string;
            org_id?: string | null | undefined;
            user_id?: string | null | undefined;
            created?: string | null | undefined;
            description?: string | null | undefined;
            deleted_at?: string | null | undefined;
            member_permissions?: ("create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls")[] | null | undefined;
            member_roles?: string[] | null | undefined;
        }>;
    };
    group: {
        create: z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_users: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            member_groups: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            org_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            description?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
            org_name?: string | null | undefined;
        }, {
            name: string;
            description?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
            org_name?: string | null | undefined;
        }>;
        patch: z.ZodObject<{
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_users: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            member_groups: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            description?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
            name?: string | null | undefined;
        }, {
            description?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
            name?: string | null | undefined;
        }>;
        object: z.ZodObject<{
            id: z.ZodString;
            org_id: z.ZodString;
            user_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            name: z.ZodString;
            description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            deleted_at: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            member_users: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
            member_groups: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString, "many">>>;
        }, "strict", z.ZodTypeAny, {
            name: string;
            id: string;
            org_id: string;
            user_id?: string | null | undefined;
            created?: string | null | undefined;
            description?: string | null | undefined;
            deleted_at?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
        }, {
            name: string;
            id: string;
            org_id: string;
            user_id?: string | null | undefined;
            created?: string | null | undefined;
            description?: string | null | undefined;
            deleted_at?: string | null | undefined;
            member_users?: string[] | null | undefined;
            member_groups?: string[] | null | undefined;
        }>;
    };
    acl: {
        create: z.ZodUnion<[z.ZodObject<{
            user_id: z.ZodString;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
        }, "strict", z.ZodTypeAny, {
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            user_id: z.ZodString;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            role_id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            role_id: string;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            role_id: string;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            group_id: z.ZodString;
            permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
        }, "strict", z.ZodTypeAny, {
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            group_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            group_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            group_id: z.ZodString;
            role_id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            group_id: string;
            role_id: string;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            group_id: string;
            role_id: string;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>]>;
        patch: undefined;
        object: z.ZodUnion<[z.ZodObject<{
            id: z.ZodString;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            user_id: z.ZodString;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            _object_org_id: z.ZodString;
            permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            id: string;
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            user_id: z.ZodString;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            _object_org_id: z.ZodString;
            role_id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            id: string;
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            role_id: string;
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            id: string;
            user_id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            role_id: string;
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            _object_org_id: z.ZodString;
            group_id: z.ZodString;
            permission: z.ZodEnum<["create", "read", "update", "delete", "create_acls", "read_acls", "update_acls", "delete_acls"]>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            group_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            group_id: string;
            permission: "create" | "read" | "update" | "delete" | "create_acls" | "read_acls" | "update_acls" | "delete_acls";
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            object_type: z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>;
            object_id: z.ZodString;
            restrict_object_type: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["organization", "project", "experiment", "dataset", "prompt", "prompt_session", "project_score", "project_tag", "group", "role"]>, z.ZodNull]>>;
            _object_org_id: z.ZodString;
            group_id: z.ZodString;
            role_id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            group_id: string;
            role_id: string;
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }, {
            id: string;
            object_type: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag";
            object_id: string;
            _object_org_id: string;
            group_id: string;
            role_id: string;
            created?: string | null | undefined;
            restrict_object_type?: "project" | "experiment" | "dataset" | "prompt" | "prompt_session" | "role" | "group" | "organization" | "project_score" | "project_tag" | null | undefined;
        }>]>;
    };
    user: {
        create: undefined;
        patch: undefined;
        object: z.ZodObject<{
            id: z.ZodString;
            given_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            family_name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            email: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            avatar_url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            given_name?: string | null | undefined;
            family_name?: string | null | undefined;
            email?: string | null | undefined;
            avatar_url?: string | null | undefined;
            created?: string | null | undefined;
        }, {
            id: string;
            given_name?: string | null | undefined;
            family_name?: string | null | undefined;
            email?: string | null | undefined;
            avatar_url?: string | null | undefined;
            created?: string | null | undefined;
        }>;
    };
};

declare const literalSchema: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
type Literal = z.infer<typeof literalSchema>;
type Json = Literal | {
    [key: string]: Json;
} | Json[];
declare const jsonSchema: z.ZodType<Json>;
declare const datetimeStringSchema: z.ZodString;
declare const objectTypes: z.ZodEnum<["project", "experiment", "dataset", "prompt", "prompt_session", "role", "group", "acl", "user"]>;
type ObjectType = z.infer<typeof objectTypes>;
declare const objectTypesWithEvent: z.ZodEnum<["project", "experiment", "dataset", "prompt", "prompt_session"]>;
type ObjectTypeWithEvent = z.infer<typeof objectTypesWithEvent>;
declare function getEventObjectType(objectType: ObjectTypeWithEvent): "experiment" | "dataset" | "prompt" | "prompt_session" | "project_logs";
type EventObjectType = ReturnType<typeof getEventObjectType>;
declare function getEventObjectDescription(objectType: ObjectTypeWithEvent): string;
declare function getObjectArticle(objectType: ObjectType): "an" | "a";

declare const chatCompletionContentPartTextSchema: z.ZodObject<{
    text: z.ZodDefault<z.ZodString>;
    type: z.ZodLiteral<"text">;
}, "strip", z.ZodTypeAny, {
    type: "text";
    text: string;
}, {
    type: "text";
    text?: string | undefined;
}>;
declare const chatCompletionContentPartImageSchema: z.ZodObject<{
    image_url: z.ZodObject<{
        url: z.ZodString;
        detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
    }, "strip", z.ZodTypeAny, {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    }, {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    }>;
    type: z.ZodLiteral<"image_url">;
}, "strip", z.ZodTypeAny, {
    type: "image_url";
    image_url: {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    };
}, {
    type: "image_url";
    image_url: {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    };
}>;
declare const chatCompletionContentPartSchema: z.ZodUnion<[z.ZodObject<{
    text: z.ZodDefault<z.ZodString>;
    type: z.ZodLiteral<"text">;
}, "strip", z.ZodTypeAny, {
    type: "text";
    text: string;
}, {
    type: "text";
    text?: string | undefined;
}>, z.ZodObject<{
    image_url: z.ZodObject<{
        url: z.ZodString;
        detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
    }, "strip", z.ZodTypeAny, {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    }, {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    }>;
    type: z.ZodLiteral<"image_url">;
}, "strip", z.ZodTypeAny, {
    type: "image_url";
    image_url: {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    };
}, {
    type: "image_url";
    image_url: {
        url: string;
        detail?: "auto" | "low" | "high" | undefined;
    };
}>]>;
declare const chatCompletionMessageToolCallSchema: z.ZodObject<{
    id: z.ZodString;
    function: z.ZodObject<{
        arguments: z.ZodString;
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        arguments: string;
    }, {
        name: string;
        arguments: string;
    }>;
    type: z.ZodLiteral<"function">;
}, "strip", z.ZodTypeAny, {
    function: {
        name: string;
        arguments: string;
    };
    type: "function";
    id: string;
}, {
    function: {
        name: string;
        arguments: string;
    };
    type: "function";
    id: string;
}>;
declare const chatCompletionMessageParamSchema: z.ZodUnion<[z.ZodObject<{
    content: z.ZodDefault<z.ZodString>;
    role: z.ZodLiteral<"system">;
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    content: string;
    role: "system";
    name?: string | undefined;
}, {
    role: "system";
    content?: string | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
        text: z.ZodDefault<z.ZodString>;
        type: z.ZodLiteral<"text">;
    }, "strip", z.ZodTypeAny, {
        type: "text";
        text: string;
    }, {
        type: "text";
        text?: string | undefined;
    }>, z.ZodObject<{
        image_url: z.ZodObject<{
            url: z.ZodString;
            detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
        }, "strip", z.ZodTypeAny, {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        }, {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        }>;
        type: z.ZodLiteral<"image_url">;
    }, "strip", z.ZodTypeAny, {
        type: "image_url";
        image_url: {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        };
    }, {
        type: "image_url";
        image_url: {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        };
    }>]>, "many">]>;
    role: z.ZodLiteral<"user">;
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    content: (string | ({
        type: "text";
        text: string;
    } | {
        type: "image_url";
        image_url: {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        };
    })[]) & (string | ({
        type: "text";
        text: string;
    } | {
        type: "image_url";
        image_url: {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        };
    })[] | undefined);
    role: "user";
    name?: string | undefined;
}, {
    role: "user";
    content?: string | ({
        type: "text";
        text?: string | undefined;
    } | {
        type: "image_url";
        image_url: {
            url: string;
            detail?: "auto" | "low" | "high" | undefined;
        };
    })[] | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    role: z.ZodLiteral<"assistant">;
    content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    function_call: z.ZodOptional<z.ZodObject<{
        arguments: z.ZodString;
        name: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        name: string;
        arguments: string;
    }, {
        name: string;
        arguments: string;
    }>>;
    name: z.ZodOptional<z.ZodString>;
    tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        function: z.ZodObject<{
            arguments: z.ZodString;
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
            arguments: string;
        }, {
            name: string;
            arguments: string;
        }>;
        type: z.ZodLiteral<"function">;
    }, "strip", z.ZodTypeAny, {
        function: {
            name: string;
            arguments: string;
        };
        type: "function";
        id: string;
    }, {
        function: {
            name: string;
            arguments: string;
        };
        type: "function";
        id: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    role: "assistant";
    content?: string | null | undefined;
    function_call?: {
        name: string;
        arguments: string;
    } | undefined;
    name?: string | undefined;
    tool_calls?: {
        function: {
            name: string;
            arguments: string;
        };
        type: "function";
        id: string;
    }[] | undefined;
}, {
    role: "assistant";
    content?: string | null | undefined;
    function_call?: {
        name: string;
        arguments: string;
    } | undefined;
    name?: string | undefined;
    tool_calls?: {
        function: {
            name: string;
            arguments: string;
        };
        type: "function";
        id: string;
    }[] | undefined;
}>, z.ZodObject<{
    content: z.ZodDefault<z.ZodString>;
    role: z.ZodLiteral<"tool">;
    tool_call_id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    content: string;
    role: "tool";
    tool_call_id: string;
}, {
    role: "tool";
    tool_call_id: string;
    content?: string | undefined;
}>, z.ZodObject<{
    content: z.ZodDefault<z.ZodString>;
    name: z.ZodString;
    role: z.ZodLiteral<"function">;
}, "strip", z.ZodTypeAny, {
    name: string;
    content: string;
    role: "function";
}, {
    name: string;
    role: "function";
    content?: string | undefined;
}>]>;
type ToolCall = z.infer<typeof chatCompletionMessageToolCallSchema>;

declare const toolsSchema: z.ZodArray<z.ZodObject<{
    function: z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        parameters: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        description?: string | undefined;
        parameters?: Record<string, unknown> | undefined;
    }, {
        name: string;
        description?: string | undefined;
        parameters?: Record<string, unknown> | undefined;
    }>;
    type: z.ZodLiteral<"function">;
}, "strip", z.ZodTypeAny, {
    function: {
        name: string;
        description?: string | undefined;
        parameters?: Record<string, unknown> | undefined;
    };
    type: "function";
}, {
    function: {
        name: string;
        description?: string | undefined;
        parameters?: Record<string, unknown> | undefined;
    };
    type: "function";
}>, "many">;
type Tools = z.infer<typeof toolsSchema>;

declare const messageRoleSchema: z.ZodEnum<["system", "user", "assistant", "function", "tool", "model"]>;
type MessageRole = z.infer<typeof messageRoleSchema>;
type Message = z.infer<typeof chatCompletionMessageParamSchema>;
type Content = Message["content"];
type ContentPartText = z.infer<typeof chatCompletionContentPartTextSchema>;
type ContentPartImage = z.infer<typeof chatCompletionContentPartImageSchema>;
type ContentPart = z.infer<typeof chatCompletionContentPartSchema>;
declare const promptBlockDataSchema: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"completion">;
    content: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "completion";
    content: string;
}, {
    type: "completion";
    content: string;
}>, z.ZodObject<{
    type: z.ZodLiteral<"chat">;
    messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        content: z.ZodDefault<z.ZodString>;
        role: z.ZodLiteral<"system">;
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        content: string;
        role: "system";
        name?: string | undefined;
    }, {
        role: "system";
        content?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
            text: z.ZodDefault<z.ZodString>;
            type: z.ZodLiteral<"text">;
        }, "strip", z.ZodTypeAny, {
            type: "text";
            text: string;
        }, {
            type: "text";
            text?: string | undefined;
        }>, z.ZodObject<{
            image_url: z.ZodObject<{
                url: z.ZodString;
                detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
            }, "strip", z.ZodTypeAny, {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            }, {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            }>;
            type: z.ZodLiteral<"image_url">;
        }, "strip", z.ZodTypeAny, {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        }, {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        }>]>, "many">]>;
        role: z.ZodLiteral<"user">;
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        content: (string | ({
            type: "text";
            text: string;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[]) & (string | ({
            type: "text";
            text: string;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[] | undefined);
        role: "user";
        name?: string | undefined;
    }, {
        role: "user";
        content?: string | ({
            type: "text";
            text?: string | undefined;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[] | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        role: z.ZodLiteral<"assistant">;
        content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        function_call: z.ZodOptional<z.ZodObject<{
            arguments: z.ZodString;
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
            arguments: string;
        }, {
            name: string;
            arguments: string;
        }>>;
        name: z.ZodOptional<z.ZodString>;
        tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            function: z.ZodObject<{
                arguments: z.ZodString;
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                arguments: string;
            }, {
                name: string;
                arguments: string;
            }>;
            type: z.ZodLiteral<"function">;
        }, "strip", z.ZodTypeAny, {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }, {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        role: "assistant";
        content?: string | null | undefined;
        function_call?: {
            name: string;
            arguments: string;
        } | undefined;
        name?: string | undefined;
        tool_calls?: {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }[] | undefined;
    }, {
        role: "assistant";
        content?: string | null | undefined;
        function_call?: {
            name: string;
            arguments: string;
        } | undefined;
        name?: string | undefined;
        tool_calls?: {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }[] | undefined;
    }>, z.ZodObject<{
        content: z.ZodDefault<z.ZodString>;
        role: z.ZodLiteral<"tool">;
        tool_call_id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        content: string;
        role: "tool";
        tool_call_id: string;
    }, {
        role: "tool";
        tool_call_id: string;
        content?: string | undefined;
    }>, z.ZodObject<{
        content: z.ZodDefault<z.ZodString>;
        name: z.ZodString;
        role: z.ZodLiteral<"function">;
    }, "strip", z.ZodTypeAny, {
        name: string;
        content: string;
        role: "function";
    }, {
        name: string;
        role: "function";
        content?: string | undefined;
    }>]>, "many">;
    tools: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    type: "chat";
    messages: ({
        content: string;
        role: "system";
        name?: string | undefined;
    } | {
        content: (string | ({
            type: "text";
            text: string;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[]) & (string | ({
            type: "text";
            text: string;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[] | undefined);
        role: "user";
        name?: string | undefined;
    } | {
        content: string;
        role: "tool";
        tool_call_id: string;
    } | {
        name: string;
        content: string;
        role: "function";
    } | {
        role: "assistant";
        content?: string | null | undefined;
        function_call?: {
            name: string;
            arguments: string;
        } | undefined;
        name?: string | undefined;
        tool_calls?: {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }[] | undefined;
    })[];
    tools?: string | undefined;
}, {
    type: "chat";
    messages: ({
        role: "system";
        content?: string | undefined;
        name?: string | undefined;
    } | {
        role: "user";
        content?: string | ({
            type: "text";
            text?: string | undefined;
        } | {
            type: "image_url";
            image_url: {
                url: string;
                detail?: "auto" | "low" | "high" | undefined;
            };
        })[] | undefined;
        name?: string | undefined;
    } | {
        role: "tool";
        tool_call_id: string;
        content?: string | undefined;
    } | {
        name: string;
        role: "function";
        content?: string | undefined;
    } | {
        role: "assistant";
        content?: string | null | undefined;
        function_call?: {
            name: string;
            arguments: string;
        } | undefined;
        name?: string | undefined;
        tool_calls?: {
            function: {
                name: string;
                arguments: string;
            };
            type: "function";
            id: string;
        }[] | undefined;
    })[];
    tools?: string | undefined;
}>]>;
type PromptBlockData = z.infer<typeof promptBlockDataSchema>;
declare const BRAINTRUST_PARAMS: string[];
declare const openAIModelParamsSchema: z.ZodObject<{
    temperature: z.ZodOptional<z.ZodNumber>;
    top_p: z.ZodOptional<z.ZodNumber>;
    max_tokens: z.ZodOptional<z.ZodNumber>;
    frequency_penalty: z.ZodOptional<z.ZodNumber>;
    presence_penalty: z.ZodOptional<z.ZodNumber>;
    response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        type: z.ZodLiteral<"json_object">;
    }, "strict", z.ZodTypeAny, {
        type: "json_object";
    }, {
        type: "json_object";
    }>>>;
    tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        type: z.ZodLiteral<"function">;
        function: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        function: {
            name: string;
        };
        type: "function";
    }, {
        function: {
            name: string;
        };
        type: "function";
    }>]>>;
    function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        name: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        name: string;
    }, {
        name: string;
    }>]>>;
    n: z.ZodOptional<z.ZodNumber>;
    stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    temperature?: number | undefined;
    top_p?: number | undefined;
    max_tokens?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
}, {
    temperature?: number | undefined;
    top_p?: number | undefined;
    max_tokens?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
}>;
type OpenAIModelParams = z.infer<typeof openAIModelParamsSchema>;
declare const modelParamsSchema: z.ZodUnion<[z.ZodObject<{
    use_cache: z.ZodOptional<z.ZodBoolean>;
    temperature: z.ZodOptional<z.ZodNumber>;
    top_p: z.ZodOptional<z.ZodNumber>;
    max_tokens: z.ZodOptional<z.ZodNumber>;
    frequency_penalty: z.ZodOptional<z.ZodNumber>;
    presence_penalty: z.ZodOptional<z.ZodNumber>;
    response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        type: z.ZodLiteral<"json_object">;
    }, "strict", z.ZodTypeAny, {
        type: "json_object";
    }, {
        type: "json_object";
    }>>>;
    tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        type: z.ZodLiteral<"function">;
        function: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        function: {
            name: string;
        };
        type: "function";
    }, {
        function: {
            name: string;
        };
        type: "function";
    }>]>>;
    function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        name: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        name: string;
    }, {
        name: string;
    }>]>>;
    n: z.ZodOptional<z.ZodNumber>;
    stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    use_cache?: boolean | undefined;
    temperature?: number | undefined;
    top_p?: number | undefined;
    max_tokens?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
}, {
    use_cache?: boolean | undefined;
    temperature?: number | undefined;
    top_p?: number | undefined;
    max_tokens?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
}>, z.ZodObject<{
    use_cache: z.ZodOptional<z.ZodBoolean>;
    max_tokens: z.ZodNumber;
    temperature: z.ZodNumber;
    top_p: z.ZodOptional<z.ZodNumber>;
    top_k: z.ZodOptional<z.ZodNumber>;
    stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    temperature: number;
    max_tokens: number;
    use_cache?: boolean | undefined;
    top_p?: number | undefined;
    top_k?: number | undefined;
    stop_sequences?: string[] | undefined;
    max_tokens_to_sample?: number | undefined;
}, {
    temperature: number;
    max_tokens: number;
    use_cache?: boolean | undefined;
    top_p?: number | undefined;
    top_k?: number | undefined;
    stop_sequences?: string[] | undefined;
    max_tokens_to_sample?: number | undefined;
}>, z.ZodObject<{
    use_cache: z.ZodOptional<z.ZodBoolean>;
    temperature: z.ZodNumber;
    maxOutputTokens: z.ZodOptional<z.ZodNumber>;
    topP: z.ZodOptional<z.ZodNumber>;
    topK: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    temperature: number;
    use_cache?: boolean | undefined;
    maxOutputTokens?: number | undefined;
    topP?: number | undefined;
    topK?: number | undefined;
}, {
    temperature: number;
    use_cache?: boolean | undefined;
    maxOutputTokens?: number | undefined;
    topP?: number | undefined;
    topK?: number | undefined;
}>, z.ZodObject<{
    use_cache: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    use_cache?: boolean | undefined;
}, {
    use_cache?: boolean | undefined;
}>]>;
type ModelParams = z.infer<typeof modelParamsSchema>;
declare const anyModelParamsSchema: z.ZodObject<{
    function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        name: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        name: string;
    }, {
        name: string;
    }>]>>;
    temperature: z.ZodNumber;
    top_p: z.ZodOptional<z.ZodNumber>;
    max_tokens: z.ZodNumber;
    frequency_penalty: z.ZodOptional<z.ZodNumber>;
    presence_penalty: z.ZodOptional<z.ZodNumber>;
    response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        type: z.ZodLiteral<"json_object">;
    }, "strict", z.ZodTypeAny, {
        type: "json_object";
    }, {
        type: "json_object";
    }>>>;
    tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
        type: z.ZodLiteral<"function">;
        function: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        function: {
            name: string;
        };
        type: "function";
    }, {
        function: {
            name: string;
        };
        type: "function";
    }>]>>;
    n: z.ZodOptional<z.ZodNumber>;
    stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    top_k: z.ZodOptional<z.ZodNumber>;
    stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
    maxOutputTokens: z.ZodOptional<z.ZodNumber>;
    topP: z.ZodOptional<z.ZodNumber>;
    topK: z.ZodOptional<z.ZodNumber>;
    use_cache: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    temperature: number;
    max_tokens: number;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    top_p?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
    top_k?: number | undefined;
    stop_sequences?: string[] | undefined;
    max_tokens_to_sample?: number | undefined;
    maxOutputTokens?: number | undefined;
    topP?: number | undefined;
    topK?: number | undefined;
    use_cache?: boolean | undefined;
}, {
    temperature: number;
    max_tokens: number;
    function_call?: "auto" | "none" | {
        name: string;
    } | undefined;
    top_p?: number | undefined;
    frequency_penalty?: number | undefined;
    presence_penalty?: number | undefined;
    response_format?: {
        type: "json_object";
    } | null | undefined;
    tool_choice?: "auto" | "none" | {
        function: {
            name: string;
        };
        type: "function";
    } | undefined;
    n?: number | undefined;
    stop?: string[] | undefined;
    top_k?: number | undefined;
    stop_sequences?: string[] | undefined;
    max_tokens_to_sample?: number | undefined;
    maxOutputTokens?: number | undefined;
    topP?: number | undefined;
    topK?: number | undefined;
    use_cache?: boolean | undefined;
}>;
type AnyModelParam = z.infer<typeof anyModelParamsSchema>;
declare const promptOptionsSchema: z.ZodObject<{
    model: z.ZodOptional<z.ZodString>;
    params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        use_cache: z.ZodOptional<z.ZodBoolean>;
        temperature: z.ZodOptional<z.ZodNumber>;
        top_p: z.ZodOptional<z.ZodNumber>;
        max_tokens: z.ZodOptional<z.ZodNumber>;
        frequency_penalty: z.ZodOptional<z.ZodNumber>;
        presence_penalty: z.ZodOptional<z.ZodNumber>;
        response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            type: z.ZodLiteral<"json_object">;
        }, "strict", z.ZodTypeAny, {
            type: "json_object";
        }, {
            type: "json_object";
        }>>>;
        tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
            type: z.ZodLiteral<"function">;
            function: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            function: {
                name: string;
            };
            type: "function";
        }, {
            function: {
                name: string;
            };
            type: "function";
        }>]>>;
        function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
            name: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>]>>;
        n: z.ZodOptional<z.ZodNumber>;
        stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        use_cache?: boolean | undefined;
        temperature?: number | undefined;
        top_p?: number | undefined;
        max_tokens?: number | undefined;
        frequency_penalty?: number | undefined;
        presence_penalty?: number | undefined;
        response_format?: {
            type: "json_object";
        } | null | undefined;
        tool_choice?: "auto" | "none" | {
            function: {
                name: string;
            };
            type: "function";
        } | undefined;
        function_call?: "auto" | "none" | {
            name: string;
        } | undefined;
        n?: number | undefined;
        stop?: string[] | undefined;
    }, {
        use_cache?: boolean | undefined;
        temperature?: number | undefined;
        top_p?: number | undefined;
        max_tokens?: number | undefined;
        frequency_penalty?: number | undefined;
        presence_penalty?: number | undefined;
        response_format?: {
            type: "json_object";
        } | null | undefined;
        tool_choice?: "auto" | "none" | {
            function: {
                name: string;
            };
            type: "function";
        } | undefined;
        function_call?: "auto" | "none" | {
            name: string;
        } | undefined;
        n?: number | undefined;
        stop?: string[] | undefined;
    }>, z.ZodObject<{
        use_cache: z.ZodOptional<z.ZodBoolean>;
        max_tokens: z.ZodNumber;
        temperature: z.ZodNumber;
        top_p: z.ZodOptional<z.ZodNumber>;
        top_k: z.ZodOptional<z.ZodNumber>;
        stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        temperature: number;
        max_tokens: number;
        use_cache?: boolean | undefined;
        top_p?: number | undefined;
        top_k?: number | undefined;
        stop_sequences?: string[] | undefined;
        max_tokens_to_sample?: number | undefined;
    }, {
        temperature: number;
        max_tokens: number;
        use_cache?: boolean | undefined;
        top_p?: number | undefined;
        top_k?: number | undefined;
        stop_sequences?: string[] | undefined;
        max_tokens_to_sample?: number | undefined;
    }>, z.ZodObject<{
        use_cache: z.ZodOptional<z.ZodBoolean>;
        temperature: z.ZodNumber;
        maxOutputTokens: z.ZodOptional<z.ZodNumber>;
        topP: z.ZodOptional<z.ZodNumber>;
        topK: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        temperature: number;
        use_cache?: boolean | undefined;
        maxOutputTokens?: number | undefined;
        topP?: number | undefined;
        topK?: number | undefined;
    }, {
        temperature: number;
        use_cache?: boolean | undefined;
        maxOutputTokens?: number | undefined;
        topP?: number | undefined;
        topK?: number | undefined;
    }>, z.ZodObject<{
        use_cache: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        use_cache?: boolean | undefined;
    }, {
        use_cache?: boolean | undefined;
    }>]>>;
    position: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    model?: string | undefined;
    params?: {
        use_cache?: boolean | undefined;
        temperature?: number | undefined;
        top_p?: number | undefined;
        max_tokens?: number | undefined;
        frequency_penalty?: number | undefined;
        presence_penalty?: number | undefined;
        response_format?: {
            type: "json_object";
        } | null | undefined;
        tool_choice?: "auto" | "none" | {
            function: {
                name: string;
            };
            type: "function";
        } | undefined;
        function_call?: "auto" | "none" | {
            name: string;
        } | undefined;
        n?: number | undefined;
        stop?: string[] | undefined;
    } | {
        temperature: number;
        max_tokens: number;
        use_cache?: boolean | undefined;
        top_p?: number | undefined;
        top_k?: number | undefined;
        stop_sequences?: string[] | undefined;
        max_tokens_to_sample?: number | undefined;
    } | {
        temperature: number;
        use_cache?: boolean | undefined;
        maxOutputTokens?: number | undefined;
        topP?: number | undefined;
        topK?: number | undefined;
    } | {
        use_cache?: boolean | undefined;
    } | undefined;
    position?: string | undefined;
}, {
    model?: string | undefined;
    params?: {
        use_cache?: boolean | undefined;
        temperature?: number | undefined;
        top_p?: number | undefined;
        max_tokens?: number | undefined;
        frequency_penalty?: number | undefined;
        presence_penalty?: number | undefined;
        response_format?: {
            type: "json_object";
        } | null | undefined;
        tool_choice?: "auto" | "none" | {
            function: {
                name: string;
            };
            type: "function";
        } | undefined;
        function_call?: "auto" | "none" | {
            name: string;
        } | undefined;
        n?: number | undefined;
        stop?: string[] | undefined;
    } | {
        temperature: number;
        max_tokens: number;
        use_cache?: boolean | undefined;
        top_p?: number | undefined;
        top_k?: number | undefined;
        stop_sequences?: string[] | undefined;
        max_tokens_to_sample?: number | undefined;
    } | {
        temperature: number;
        use_cache?: boolean | undefined;
        maxOutputTokens?: number | undefined;
        topP?: number | undefined;
        topK?: number | undefined;
    } | {
        use_cache?: boolean | undefined;
    } | undefined;
    position?: string | undefined;
}>;
type PromptOptions = z.infer<typeof promptOptionsSchema>;
declare const promptDataSchema: z.ZodObject<{
    prompt: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"completion">;
        content: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "completion";
        content: string;
    }, {
        type: "completion";
        content: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"chat">;
        messages: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            content: z.ZodDefault<z.ZodString>;
            role: z.ZodLiteral<"system">;
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            content: string;
            role: "system";
            name?: string | undefined;
        }, {
            role: "system";
            content?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            content: z.ZodUnion<[z.ZodDefault<z.ZodString>, z.ZodArray<z.ZodUnion<[z.ZodObject<{
                text: z.ZodDefault<z.ZodString>;
                type: z.ZodLiteral<"text">;
            }, "strip", z.ZodTypeAny, {
                type: "text";
                text: string;
            }, {
                type: "text";
                text?: string | undefined;
            }>, z.ZodObject<{
                image_url: z.ZodObject<{
                    url: z.ZodString;
                    detail: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"low">, z.ZodLiteral<"high">]>>;
                }, "strip", z.ZodTypeAny, {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                }, {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                }>;
                type: z.ZodLiteral<"image_url">;
            }, "strip", z.ZodTypeAny, {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            }, {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            }>]>, "many">]>;
            role: z.ZodLiteral<"user">;
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            content: (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[]) & (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined);
            role: "user";
            name?: string | undefined;
        }, {
            role: "user";
            content?: string | ({
                type: "text";
                text?: string | undefined;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            role: z.ZodLiteral<"assistant">;
            content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            function_call: z.ZodOptional<z.ZodObject<{
                arguments: z.ZodString;
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
                arguments: string;
            }, {
                name: string;
                arguments: string;
            }>>;
            name: z.ZodOptional<z.ZodString>;
            tool_calls: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                function: z.ZodObject<{
                    arguments: z.ZodString;
                    name: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                    arguments: string;
                }, {
                    name: string;
                    arguments: string;
                }>;
                type: z.ZodLiteral<"function">;
            }, "strip", z.ZodTypeAny, {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }, {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        }, {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        }>, z.ZodObject<{
            content: z.ZodDefault<z.ZodString>;
            role: z.ZodLiteral<"tool">;
            tool_call_id: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            content: string;
            role: "tool";
            tool_call_id: string;
        }, {
            role: "tool";
            tool_call_id: string;
            content?: string | undefined;
        }>, z.ZodObject<{
            content: z.ZodDefault<z.ZodString>;
            name: z.ZodString;
            role: z.ZodLiteral<"function">;
        }, "strip", z.ZodTypeAny, {
            name: string;
            content: string;
            role: "function";
        }, {
            name: string;
            role: "function";
            content?: string | undefined;
        }>]>, "many">;
        tools: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        type: "chat";
        messages: ({
            content: string;
            role: "system";
            name?: string | undefined;
        } | {
            content: (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[]) & (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined);
            role: "user";
            name?: string | undefined;
        } | {
            content: string;
            role: "tool";
            tool_call_id: string;
        } | {
            name: string;
            content: string;
            role: "function";
        } | {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        })[];
        tools?: string | undefined;
    }, {
        type: "chat";
        messages: ({
            role: "system";
            content?: string | undefined;
            name?: string | undefined;
        } | {
            role: "user";
            content?: string | ({
                type: "text";
                text?: string | undefined;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined;
            name?: string | undefined;
        } | {
            role: "tool";
            tool_call_id: string;
            content?: string | undefined;
        } | {
            name: string;
            role: "function";
            content?: string | undefined;
        } | {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        })[];
        tools?: string | undefined;
    }>]>>>;
    options: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        model: z.ZodOptional<z.ZodString>;
        params: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            use_cache: z.ZodOptional<z.ZodBoolean>;
            temperature: z.ZodOptional<z.ZodNumber>;
            top_p: z.ZodOptional<z.ZodNumber>;
            max_tokens: z.ZodOptional<z.ZodNumber>;
            frequency_penalty: z.ZodOptional<z.ZodNumber>;
            presence_penalty: z.ZodOptional<z.ZodNumber>;
            response_format: z.ZodOptional<z.ZodNullable<z.ZodObject<{
                type: z.ZodLiteral<"json_object">;
            }, "strict", z.ZodTypeAny, {
                type: "json_object";
            }, {
                type: "json_object";
            }>>>;
            tool_choice: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                type: z.ZodLiteral<"function">;
                function: z.ZodObject<{
                    name: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    name: string;
                }, {
                    name: string;
                }>;
            }, "strip", z.ZodTypeAny, {
                function: {
                    name: string;
                };
                type: "function";
            }, {
                function: {
                    name: string;
                };
                type: "function";
            }>]>>;
            function_call: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodLiteral<"none">, z.ZodObject<{
                name: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>]>>;
            n: z.ZodOptional<z.ZodNumber>;
            stop: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        }, {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        }>, z.ZodObject<{
            use_cache: z.ZodOptional<z.ZodBoolean>;
            max_tokens: z.ZodNumber;
            temperature: z.ZodNumber;
            top_p: z.ZodOptional<z.ZodNumber>;
            top_k: z.ZodOptional<z.ZodNumber>;
            stop_sequences: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            max_tokens_to_sample: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        }, {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        }>, z.ZodObject<{
            use_cache: z.ZodOptional<z.ZodBoolean>;
            temperature: z.ZodNumber;
            maxOutputTokens: z.ZodOptional<z.ZodNumber>;
            topP: z.ZodOptional<z.ZodNumber>;
            topK: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        }, {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        }>, z.ZodObject<{
            use_cache: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            use_cache?: boolean | undefined;
        }, {
            use_cache?: boolean | undefined;
        }>]>>;
        position: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        model?: string | undefined;
        params?: {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        } | {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        } | {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        } | {
            use_cache?: boolean | undefined;
        } | undefined;
        position?: string | undefined;
    }, {
        model?: string | undefined;
        params?: {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        } | {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        } | {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        } | {
            use_cache?: boolean | undefined;
        } | undefined;
        position?: string | undefined;
    }>>>;
    origin: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        prompt_id: z.ZodOptional<z.ZodString>;
        project_id: z.ZodOptional<z.ZodString>;
        prompt_version: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        prompt_id?: string | undefined;
        project_id?: string | undefined;
        prompt_version?: string | undefined;
    }, {
        prompt_id?: string | undefined;
        project_id?: string | undefined;
        prompt_version?: string | undefined;
    }>>>;
}, "strict", z.ZodTypeAny, {
    prompt?: {
        type: "completion";
        content: string;
    } | {
        type: "chat";
        messages: ({
            content: string;
            role: "system";
            name?: string | undefined;
        } | {
            content: (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[]) & (string | ({
                type: "text";
                text: string;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined);
            role: "user";
            name?: string | undefined;
        } | {
            content: string;
            role: "tool";
            tool_call_id: string;
        } | {
            name: string;
            content: string;
            role: "function";
        } | {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        })[];
        tools?: string | undefined;
    } | null | undefined;
    options?: {
        model?: string | undefined;
        params?: {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        } | {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        } | {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        } | {
            use_cache?: boolean | undefined;
        } | undefined;
        position?: string | undefined;
    } | null | undefined;
    origin?: {
        prompt_id?: string | undefined;
        project_id?: string | undefined;
        prompt_version?: string | undefined;
    } | null | undefined;
}, {
    prompt?: {
        type: "completion";
        content: string;
    } | {
        type: "chat";
        messages: ({
            role: "system";
            content?: string | undefined;
            name?: string | undefined;
        } | {
            role: "user";
            content?: string | ({
                type: "text";
                text?: string | undefined;
            } | {
                type: "image_url";
                image_url: {
                    url: string;
                    detail?: "auto" | "low" | "high" | undefined;
                };
            })[] | undefined;
            name?: string | undefined;
        } | {
            role: "tool";
            tool_call_id: string;
            content?: string | undefined;
        } | {
            name: string;
            role: "function";
            content?: string | undefined;
        } | {
            role: "assistant";
            content?: string | null | undefined;
            function_call?: {
                name: string;
                arguments: string;
            } | undefined;
            name?: string | undefined;
            tool_calls?: {
                function: {
                    name: string;
                    arguments: string;
                };
                type: "function";
                id: string;
            }[] | undefined;
        })[];
        tools?: string | undefined;
    } | null | undefined;
    options?: {
        model?: string | undefined;
        params?: {
            use_cache?: boolean | undefined;
            temperature?: number | undefined;
            top_p?: number | undefined;
            max_tokens?: number | undefined;
            frequency_penalty?: number | undefined;
            presence_penalty?: number | undefined;
            response_format?: {
                type: "json_object";
            } | null | undefined;
            tool_choice?: "auto" | "none" | {
                function: {
                    name: string;
                };
                type: "function";
            } | undefined;
            function_call?: "auto" | "none" | {
                name: string;
            } | undefined;
            n?: number | undefined;
            stop?: string[] | undefined;
        } | {
            temperature: number;
            max_tokens: number;
            use_cache?: boolean | undefined;
            top_p?: number | undefined;
            top_k?: number | undefined;
            stop_sequences?: string[] | undefined;
            max_tokens_to_sample?: number | undefined;
        } | {
            temperature: number;
            use_cache?: boolean | undefined;
            maxOutputTokens?: number | undefined;
            topP?: number | undefined;
            topK?: number | undefined;
        } | {
            use_cache?: boolean | undefined;
        } | undefined;
        position?: string | undefined;
    } | null | undefined;
    origin?: {
        prompt_id?: string | undefined;
        project_id?: string | undefined;
        prompt_version?: string | undefined;
    } | null | undefined;
}>;
type PromptData = z.infer<typeof promptDataSchema>;

export { type Acl, type AclObjectType, type AnyModelParam, type ApiKey, BRAINTRUST_PARAMS, type Content, type ContentPart, type ContentPartImage, type ContentPartText, type Dataset, type EventObjectType, type Experiment, type Group, type Json, type Me, type Member, type Message, type MessageRole, type ModelParams, type ObjectType, type ObjectTypeWithEvent, type OpenAIModelParams, type Organization, type Permission, type Project, type Prompt, type PromptBlockData, type PromptData, type PromptOptions, type Role, type ToolCall, type Tools, type User, aclObjectSchema, aclObjectTypeEnum, aclSchema, allFetchFiltersSchema, apiKeySchema, appLimitSchema, auditSourcesSchema, chatCompletionContentPartImageSchema, comparisonExperimentIdParamSchema, crossObjectInsertRequestSchema, crossObjectInsertResponseSchema, datasetSchema, datetimeStringSchema, endingBeforeSchema, eventObjectSchemas, experimentSchema, fetchEventsRequestSchema, fetchFiltersSchema, fetchLimitSchema, getEventObjectDescription, getEventObjectType, getObjectArticle, groupSchema, insertEventsResponseSchema, jsonSchema, literalSchema, makeObjectIdsFilterSchema, maxRootSpanIdSchema, maxXactIdSchema, meSchema, memberSchema, messageRoleSchema, modelParamsSchema, objectSchemas, objectTypeSummarizeResponseSchemas, objectTypes, objectTypesWithEvent, organizationSchema, permissionEnum, projectSchema, promptBlockDataSchema, promptDataSchema, promptOptionsSchema, promptSchema, roleSchema, startingAfterSchema, summarizeDataParamSchema, summarizeScoresParamSchema, toolsSchema, userSchema, versionSchema };
