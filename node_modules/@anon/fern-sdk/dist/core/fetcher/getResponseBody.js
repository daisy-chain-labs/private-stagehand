"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResponseBody = getResponseBody;
const chooseStreamWrapper_1 = require("./stream-wrappers/chooseStreamWrapper");
async function getResponseBody(response, responseType) {
    if (response.body != null && responseType === "blob") {
        return await response.blob();
    }
    else if (response.body != null && responseType === "arrayBuffer") {
        return await response.arrayBuffer();
    }
    else if (response.body != null && responseType === "sse") {
        return response.body;
    }
    else if (response.body != null && responseType === "streaming") {
        return (0, chooseStreamWrapper_1.chooseStreamWrapper)(response.body);
    }
    else if (response.body != null && responseType === "text") {
        return await response.text();
    }
    else {
        const text = await response.text();
        if (text.length > 0) {
            try {
                let responseBody = JSON.parse(text);
                return responseBody;
            }
            catch (err) {
                return {
                    ok: false,
                    error: {
                        reason: "non-json",
                        statusCode: response.status,
                        rawBody: text,
                    },
                };
            }
        }
        else {
            return undefined;
        }
    }
}
//# sourceMappingURL=getResponseBody.js.map