/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Actions } from "./api/resources/actions/client/Client";
import { Activity } from "./api/resources/activity/client/Client";
import { AppIntegrations } from "./api/resources/appIntegrations/client/Client";
import { AppUserIdToken } from "./api/resources/appUserIdToken/client/Client";
import { Link } from "./api/resources/link/client/Client";
import { Member } from "./api/resources/member/client/Client";
import { Organization } from "./api/resources/organization/client/Client";
import { Run } from "./api/resources/run/client/Client";
import { RuntimeLog } from "./api/resources/runtimeLog/client/Client";
import { SdkClient } from "./api/resources/sdkClient/client/Client";
import { Session } from "./api/resources/session/client/Client";
import { UserPool } from "./api/resources/userPool/client/Client";

export declare namespace AnonApiClient {
  interface Options {
    environment?: core.Supplier<environments.AnonApiEnvironment | string>;
    token: core.Supplier<core.BearerToken>;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId: core.Supplier<string>;
  }

  interface RequestOptions {
    /** The maximum time to wait for a response in seconds. */
    timeoutInSeconds?: number;
    /** The number of times to retry the request. Defaults to 2. */
    maxRetries?: number;
    /** A hook to abort the request. */
    abortSignal?: AbortSignal;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId?: string;
    /** Additional headers to include in the request. */
    headers?: Record<string, string>;
  }
}

export class AnonApiClient {
  constructor(protected readonly _options: AnonApiClient.Options) {}

  protected _actions: Actions | undefined;

  public get actions(): Actions {
    return (this._actions ??= new Actions(this._options));
  }

  protected _activity: Activity | undefined;

  public get activity(): Activity {
    return (this._activity ??= new Activity(this._options));
  }

  protected _appIntegrations: AppIntegrations | undefined;

  public get appIntegrations(): AppIntegrations {
    return (this._appIntegrations ??= new AppIntegrations(this._options));
  }

  protected _appUserIdToken: AppUserIdToken | undefined;

  public get appUserIdToken(): AppUserIdToken {
    return (this._appUserIdToken ??= new AppUserIdToken(this._options));
  }

  protected _link: Link | undefined;

  public get link(): Link {
    return (this._link ??= new Link(this._options));
  }

  protected _member: Member | undefined;

  public get member(): Member {
    return (this._member ??= new Member(this._options));
  }

  protected _organization: Organization | undefined;

  public get organization(): Organization {
    return (this._organization ??= new Organization(this._options));
  }

  protected _run: Run | undefined;

  public get run(): Run {
    return (this._run ??= new Run(this._options));
  }

  protected _runtimeLog: RuntimeLog | undefined;

  public get runtimeLog(): RuntimeLog {
    return (this._runtimeLog ??= new RuntimeLog(this._options));
  }

  protected _sdkClient: SdkClient | undefined;

  public get sdkClient(): SdkClient {
    return (this._sdkClient ??= new SdkClient(this._options));
  }

  protected _session: Session | undefined;

  public get session(): Session {
    return (this._session ??= new Session(this._options));
  }

  protected _userPool: UserPool | undefined;

  public get userPool(): UserPool {
    return (this._userPool ??= new UserPool(this._options));
  }
}
